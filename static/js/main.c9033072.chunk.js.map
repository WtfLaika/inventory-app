{"version":3,"sources":["components/admin-tabs/admin-tabs.styles.ts","components/tab-panel/tab-panel.tsx","redux/userReducer.ts","redux/equipmentReducer.ts","redux/store.ts","components/global-states/global.states.ts","components/admin-tabs/admin-tabs.tsx","components/users-list/users-list.styles.ts","constants/colors.ts","styles/styles.ts","components/modal-users-list/modal-users-list.styles.ts","components/button/button.tsx","components/input/input.tsx","screens/auth/auth.utils.ts","constants/errors.ts","constants/api.ts","service/api.ts","screens/main/main.consts.ts","screens/main/main.api.ts","components/loader/loader.tsx","components/modal-optinal-select/modal-optinal-select.style.ts","components/modal-optinal-select/modal-optinal-select.tsx","components/modal-users-list/modal-users-list.tsx","components/modal-users-list/modal-users-list.state.ts","components/hooks/edit-modal-state.ts","components/remove-item-dialog/remove-item-dialog.tsx","components/user-item/user-item.style.ts","components/user-item/user-item.tsx","components/user-item/user-item.state.ts","components/notification-message/ notification-message.tsx","components/user-filter/user-filter.style.ts","components/user-filter/user-filter.tsx","components/users-list/users-list.tsx","components/users-list/users-list.state.ts","components/modal-equipments-list/modal-equipment-list.styles.ts","components/modal-equipment-user-select/modal-equipment-user-select.style.ts","components/modal-equipment-user-select/modal-equipment-user-select.tsx","components/modal-equipments-list/modal-equipments-list.tsx","components/modal-equipments-list/modal-equipment-list.state.ts","components/equipment-item/equipment-item.style.ts","components/equipment-item/equipment-item.tsx","components/equipment-item/equipment-item.state.ts","components/equipment-list/equipment-list.tsx","components/equipment-list/equipment-list.state.ts","components/header/header.state.ts","components/modal-request-list/modal-request-list.styles.ts","components/modal-request-list/modal-request-list.state.ts","components/single-modal-equipment-select/single-modal-equipment-select.style.ts","components/single-modal-equipment-select/single-modal-equipment-select.tsx","components/modal-request-list/modal-request-list.tsx","components/header/header.tsx","components/request-item/request-item.style.ts","components/modal-equipment-request/modal-equipment-request.style.ts","components/modal-equipment-request-select/modal-equipment-request-select.tsx","components/modal-equipment-request-select/modal-equipment-request-select.style.ts","components/modal-equipment-request/modal-equipment-request.tsx","components/modal-equipment-request/modal-equipment-request.state.ts","components/request-item/request-item.tsx","components/request-item/request-item.state.ts","components/request-list/request-list.tsx","components/selected-equipment-list/selected-equipment-list.tsx","components/selected-equipment-list/selected-equipment-list.state.ts","screens/main/mainPage.styles.ts","screens/main/mainPage.tsx","screens/main/main.state.ts","constants/routes.ts","components/PrivateRouter/privateRouter.tsx","screens/auth/auth.styles.ts","constants/fontSizes.ts","constants/placeholders.ts","screens/auth/auth.constants.ts","screens/auth/auth.api.ts","screens/auth/auth.state.ts","components/auth-tabs/auth-tabs.styles.ts","components/auth-tabs/auth-tabs.tsx","screens/auth/auth.tsx","components/pop-up/pop-up.tsx","App.tsx","index.tsx"],"names":["AdminTabsWrapper","styled","div","useTabsListStyles","makeStyles","theme","createStyles","menuButton","marginRight","padding","marginLeft","editButton","paddingLeft","position","width","editUserButton","modalPosition","top","left","borders","borderTopLeftRadius","borderTopRightRadius","CustomTabPanel","props","children","value","index","other","role","hidden","id","Box","pt","pb","Typography","component","variant","initialState","allUsers","thatUser","email","name","password","status","date","Date","equipment","requests","token","error","message","isLogin","isError","isCreated","userSlice","createSlice","reducers","loginUser","state","action","payload","user","catchErrors","reset","closePopup","addRequest","length","getRequest","getUsers","addUser","editUser","map","deleteUsers","filter","deleteRequest","request","editUserInRequests","addThatUserEquipment","deleteThatUserEquipment","equip","deleteEquipmentFromUser","equipmentId","updateEquipmentInUser","addEquipmentInUser","actions","equipmentSlice","errorMessage","getEquipments","addEquipments","editEquipments","deleteEquipments","catchEquipmentErrors","clearUser","updateUserInEquipment","deleteUserInEquipment","some","item","addUserInEquip","removeUserFromEquipment","userId","addUserInEquipment","closePopupEquipment","persistConfig","key","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","users","usersReducer","equipmentReducer","pReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","devTools","enhancers","persistOr","persistStore","useAppSelector","useSelector","useGlobalState","useFormatedDate","format","a11yProps","AdminTabs","equipmentSelected","React","useState","setValue","classes","AppBar","className","Tabs","centered","onChange","event","newValue","Tab","label","FlexRowEquipmentWrapper","useStyles","shadow","boxShadow","COLORS","ListMainWrapper","ListItem","EquipmentItem","ListItemText","p","FlexRowWrapper","TitleText","span","SmallWidthWrapper","ButtonContainer","MenuButtonContainer","InputWrapper","ErrorWrapper","DialogActions","TextField","margin","marginTop","spacing","marginBottom","marginWithError","textCenter","textAlign","width400","maxWidth","width600","noMargin","dialogActionsStyle","justifyContent","CustomButton","onClick","type","disabled","Button","color","Input","placeholder","onBlur","multiline","rows","getErrorsState","errors","touched","nameField","ERRORS","API","getInstance","reduxToken","instance","axios","create","baseURL","timeout","interceptors","use","config","JSON","parse","localStorage","getItem","headers","Authorization","postData","requestUrl","post","fetchData","params","a","get","changeData","put","deleteData","delete","MAIN_ROUTES","MainApiServices","data","root","display","zIndex","transform","overlayBackground","height","backgroundColor","Loader","CircularProgress","wrapper","option","EquipmentSelect","optionValue","equipmentOptions","onChangeEquipmentOptionHandler","filterOptions","Autocomplete","multiple","isOptionEqualToValue","options","getOptionLabel","style","renderInput","renderOption","MenuItem","UserModal","modalUserOpenHandler","isUserModalOpen","itemValues","defaultEquipmentOptionValues","defaultUserOptionValues","isSending","setSending","filterValues","setFilterValues","userOptionValue","setUserOptionValue","setOptionValue","reason","onChangeUserOptionHandler","deletedOptions","optionValues","every","addedOptions","dispatch","useDispatch","addUsers","closeModal","equipmentIds","userData","eq","eqItem","el","response","editUsers","ids","editUserData","deleted","added","onChangeFilterHandler","target","getItemOnPage","items","toLowerCase","includes","toLocaleLowerCase","userValidationScheme","Yup","shape","matches","max","min","required","typeError","equipmentValidationScheme","distributor","equipmentType","price","useModalState","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","initialValues","validateOnBlur","onSubmit","validationSchema","values","handleChange","handleBlur","handleSubmit","isValid","dirty","validate","useEditModalState","isOpen","setOpen","isEditModalOpen","setEditModalOpen","isRemoveModalOpen","setRemoveModalOpen","anchorRef","useRef","current","contains","handleToggle","prevOpen","removeItemHandler","itemModalOpenHandler","handleCloseRemoveModal","RemoveItemDialog","equipmentItemId","userItemId","requestItemId","deleteEquipment","deleteUser","autoFocus","UserItem","useUserItemState","IconButton","ref","edge","Popper","transition","disablePortal","anchorEl","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","notification","fontSize","paddingTop","NotificationMessage","inputStyle","Filter","UsersList","useUserState","userClasses","userOnPage","updated","createFilterOptions","matchFrom","stringify","UserSelect","usersOptions","sx","EquipmentsModal","isEquipmentsModalOpen","modalEquipmentsOpenHandler","undefined","addEquipment","equipmentData","editEquipment","editEquipmentData","elem","useModalEquipmentState","alignSelf","equipmentItem","selectedItemGroup","useEquipmentItemState","listClasses","EquipmentList","useEquipmentState","equipmentOnPage","flexGrow","title","paper","initialOptionValue","EquipmentSingleSelect","RequestModal","isRequestModalOpen","modalRequestOpenHandler","isDirty","setDirty","addNewRequest","newRequest","Array","isArray","requestData","requestValidationScheme","useRequestModalState","thatUserEquipment","filteredEquipment","item2","Header","setEquipmentsModalOpen","isUsersModalOpen","setUsersModalOpen","userModalOpenHandler","setRequestModalOpen","requestOpenHandler","addEquipmentHandler","handleListKeyDown","preventDefault","requestEquipment","useHeaderState","useEffect","focus","userRole","Toolbar","onKeyDown","declineBtn","textTransform","border","lineHeight","borderColor","fontFamily","join","acceptBtn","EquipmentSelectByRequest","defaultOptionEquipment","onOpenSelectorHandler","onOpen","defaultValue","UserRequestModal","deleteItem","isModalOpen","userRequestModalOpenHadler","freeEquipment","find","useEquipmentRequest","RequestItem","requestedEquipment","deleteRequestItem","requestId","useRequestItem","RequestList","SelectedEquipmentList","useSelectedEquipmentState","MainWrapper","MainPage","isLoading","setLoading","getAllUsers","usersData","getAllEquipments","getAllRequests","logOut","useMainState","ROUTES","PrivateRoute","isSignedIn","render","to","pathname","AuthWrapper","AuthForm","form","ErrorText","PLACEHOLDERS","AUTH_ROUTES","authApiServices","useBorderStyles","TabsWrapper","AuthTabs","signIn","Auth","login","authValidation","useAuthState","PopUp","isErorrCatched","catchedErrorMessage","isErorrEquip","erorrMessageEquip","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","App","loading","persistor","hashType","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c9033072.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const AdminTabsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  box-shadow: 0px 0px 17px 7px rgba(34, 60, 80, 0.1);\n  border-radius: 5px;\n  z-index: 0;\n`;\nexport const useTabsListStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: \"10px\",\n    },\n    editButton: {\n      marginRight: 0,\n      paddingLeft: \"10px\",\n      position: \"relative\",\n      width: \"25%\",\n      marginLeft: 0,\n    },\n    editUserButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: 0,\n    },\n    modalPosition: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n    },\n    borders: {\n      borderTopLeftRadius: '5px',\n      borderTopRightRadius: '5px',\n    }\n  })\n);\n\n","import { Box,Typography } from \"@material-ui/core\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\n\n\n\n\nexport const CustomTabPanel =(props: TabPanelProps) =>{\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box pt={1.5} pb={1.5}>\n          <Typography component={'span'} variant={'body2'}>\n            {children}\n          </Typography>\n        </Box>\n      )}\n    </div>\n  );\n}","import { IEquipment } from \"./equipmentReducer\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport React from \"react\";\n\ninterface IInitialState {\n  allUsers: IUser[];\n  thatUser: IUser;\n  token: string;\n  error: {\n    message: string;\n  };\n  isLogin: boolean;\n  isError: boolean;\n  isCreated: boolean;\n}\n\nexport interface IRequest {\n  id: string;\n  equipment: IEquipment;\n  request: string;\n  user: IUser;\n}\nexport interface IUser {\n  id: string;\n  email: string;\n  name: string;\n  password: string;\n  role?: string;\n  status: string;\n  date: Date;\n  equipment: IEquipment[];\n  requests: IRequest[];\n  updated?: Date;\n  equipmentIds?: string[];\n}\nexport interface ILogin {\n  user: IUser;\n  thatUser: IUser;\n  token: string;\n  error: {\n    message: string;\n  };\n  isLogin: boolean;\n  isError: boolean;\n  isCreated: boolean;\n}\nexport type RequestArr = IRequest[];\nexport type UsersArr = IUser[];\nconst initialState: IInitialState = {\n  allUsers: [],\n  thatUser: {\n    id: \"\",\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    role: \"\",\n    status: \"\",\n    date: new Date(),\n    equipment: [],\n    requests: [],\n  },\n  token: \"\",\n  error: {\n    message: \"\",\n  },\n  isLogin: false,\n  isError: false,\n  isCreated: false,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginUser: (state, action: PayloadAction<ILogin>) => {\n      state.thatUser = action.payload.user;\n      state.token = action.payload.token;\n      state.error.message = \"\";\n      state.isLogin = true;\n    },\n    catchErrors: (state, action: PayloadAction<string>) => {\n      state.error.message = action.payload;\n      state.isError = true;\n    },\n\n    reset: () => {\n      return initialState;\n    },\n\n    closePopup: (state) => {\n      state.isError = false;\n      state.isCreated = false;\n    },\n\n    addRequest: (state, action: PayloadAction<IRequest>) => {\n      if (state.thatUser.requests?.length) {\n        state.thatUser.requests = [...state.thatUser.requests, action.payload];\n      } else {\n        state.thatUser.requests = [action.payload];\n      }\n    },\n    getRequest: (state, action: PayloadAction<RequestArr>) => {\n      state.thatUser.requests = action.payload;\n    },\n    getUsers: (state: any, action: PayloadAction<UsersArr>) => {\n      state.allUsers = action.payload;\n    },\n    addUser: (state: any, action: PayloadAction<IUser>) => {\n      state.allUsers = [...state.allUsers, action.payload];\n      state.isCreated = true;\n    },\n    editUser: (state: IInitialState, action: PayloadAction<IUser>) => {\n      state.allUsers = state.allUsers.map((user) =>\n        user.id === action.payload.id ? action.payload : user\n      );\n    },\n    deleteUsers: (state: IInitialState, action: PayloadAction<string>) => {\n      state.allUsers = state.allUsers.filter(\n        (user) => user.id !== action.payload\n      );\n    },\n    deleteRequest: (state: IInitialState, action: PayloadAction<string>) => {\n      state.thatUser.requests = state.thatUser.requests?.filter(\n        (request) => request.id !== action.payload\n      );\n    },\n    editUserInRequests:(state:IInitialState,action:PayloadAction<IUser>) => {\n      state.thatUser.requests = state.thatUser.requests?.map(\n        (request) => (request.user.id === action.payload.id)? {...request,user:action.payload} : request\n       )\n    },\n\n    addThatUserEquipment: (state: any, action: PayloadAction<IEquipment>) => {\n      state.thatUser.equipment = [...state.thatUser.equipment, action.payload];\n    },\n    deleteThatUserEquipment: (\n      state: any,\n      action: PayloadAction<IEquipment>\n    ) => {\n      state.thatUser.equipment = state.thatUser.equipment.filter(\n        (equip: IEquipment) => {\n          return equip.id !== action.payload.id;\n        }\n      );\n    },\n    deleteEquipmentFromUser: (\n      state,\n      action: PayloadAction<{ equipmentId: string }>\n    ) => {\n      state.allUsers = state.allUsers.map((user) =>\n        user.equipment\n          ? {\n              ...user,\n              equipment: user.equipment.filter(\n                (equipment) => equipment.id !== action.payload.equipmentId\n              ),\n            }\n          : user\n      );\n    },\n    updateEquipmentInUser: (\n      state,\n      action: PayloadAction<{ id?: string; equipment: IEquipment }>\n    ) => {\n      state.allUsers = state.allUsers.map((user) =>\n        user.id === action.payload.id && user.equipment\n          ? {\n              ...user,\n              equipment: [...user.equipment, action.payload.equipment],\n            }\n          : user\n      );\n    },\n    addEquipmentInUser: (\n      state,\n      action: PayloadAction<{ equipment: IEquipment }>\n    ) => {\n      state.allUsers = state.allUsers.map((user) =>\n        user.id === action.payload.equipment.user?.id && user.equipment\n          ? {\n              ...user,\n              equipment: [...user.equipment, action.payload.equipment],\n            }\n          : user\n      );\n    },\n  },\n});\n\nexport const {\n  loginUser,\n  catchErrors,\n  reset,\n  closePopup,\n  addRequest,\n  getRequest,\n  getUsers,\n  addEquipmentInUser,\n  deleteEquipmentFromUser,\n  deleteUsers,\n  addUser,\n  updateEquipmentInUser,\n  editUser,\n  addThatUserEquipment,\n  deleteThatUserEquipment,\n  deleteRequest,\n  editUserInRequests\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { IUser } from './userReducer';\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface IEquipment {\n  id: string;\n  name: string;\n  userId: string | null;\n  distributor: string;\n  equipmentType: string;\n  price: number;\n  date: Date ;\n  status: string;\n  updated: Date;\n  user?: IUser| null;\n}\n\ninterface IInitialState {\n  equipment: IEquipment[];\n  isError: boolean;\n  errorMessage: {\n    message: string;\n  };\n\n}\n\nexport const initialEquipmentState: IInitialState = {\n  equipment: [],\n  isError: false,\n  errorMessage: {\n    message: \"\",\n  },\n};\n\nexport const equipmentSlice = createSlice({\n  name: \"equipment\",\n  initialState: initialEquipmentState,\n  reducers: {\n    getEquipments: (\n      state: IInitialState,\n      action: PayloadAction<IEquipment[]>\n    ) => {\n      state.equipment = action.payload;\n    },\n    addEquipments: (\n      state: IInitialState,\n      action: PayloadAction<IEquipment>\n    ) => {\n      state.equipment = [...state.equipment, action.payload];\n    },\n    editEquipments: (\n      state: IInitialState,\n      action: PayloadAction<IEquipment>\n    ) => {\n      state.equipment = state.equipment.map((equipment) =>\n        equipment.id === action.payload.id ? action.payload : equipment\n      );\n    },\n    deleteEquipments: (state: IInitialState, action: PayloadAction<string>) => {\n      state.equipment = state.equipment.filter(\n        (equipment) => equipment.id !== action.payload\n      );\n    },\n    catchEquipmentErrors: (\n      state,\n      action: PayloadAction<{ message: string }>\n    ) => {\n      state.errorMessage.message = action.payload.message;\n      state.isError = true;\n    },\n    clearUser: (\n      state: IInitialState,\n      action: PayloadAction<{ equipmentId: string }>\n    ) => {\n      state.equipment = state.equipment.map((equipment) =>\n        equipment.id === action.payload.equipmentId\n          ? { ...equipment, user: null }\n          : equipment\n      );\n    },\n    updateUserInEquipment: (\n      state: IInitialState,\n      action: PayloadAction<{ equipment: IEquipment[] }>\n    ) => {\n      state.equipment = action.payload.equipment;\n    },\n\n    deleteUserInEquipment: (\n      state: IInitialState,\n      action: PayloadAction<{ equipment: IEquipment[] | undefined }>\n    ) => {\n      state.equipment = state.equipment.map((equipment) => {\n        if (\n          action.payload.equipment?.some((item) => item.id === equipment.id)\n        ) {\n          return { ...equipment, user: null };\n        }\n        return equipment;\n      });\n    },\n    addUserInEquip: (\n      state: IInitialState,\n      action: PayloadAction<{ equipment: IEquipment[] }>\n    ) => {\n      state.equipment = action.payload.equipment;\n    },\n    removeUserFromEquipment: (\n      state: IInitialState,\n      action: PayloadAction<{ userId: string }>\n    ) => {\n      state.equipment = state.equipment.map((equipment) =>\n        equipment.user?.id === action.payload.userId\n          ? { ...equipment, user: null }\n          : equipment\n      );\n    },\n   \n  \n\n    addUserInEquipment: (\n      state: IInitialState,\n      action: PayloadAction<{ equipment: IEquipment[]; user: IUser}>\n    ) => {\n      state.equipment = state.equipment.map((equipment) => {\n        if (\n          action.payload.equipment.some((item) => item.id === equipment.id)\n        ) {\n          return { ...equipment, user: action.payload.user };\n        }\n        return equipment;\n      });\n    },\n    closePopupEquipment: (state) => {\n      state.isError = false;\n      state.errorMessage.message = \"\";\n    },\n  },\n});\n\nexport const {\n  getEquipments,\n  addEquipments,\n  editEquipments,\n  deleteEquipments,\n  clearUser,\n  updateUserInEquipment,\n  catchEquipmentErrors,\n  deleteUserInEquipment,\n  removeUserFromEquipment,\n  addUserInEquipment,\n  closePopupEquipment,\n  addUserInEquip\n} = equipmentSlice.actions;\nexport default equipmentSlice.reducer;\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport { persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport usersReducer from \"./userReducer\";\nimport equipmentReducer from \"./equipmentReducer\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\n\nconst persistConfig = {\n  key: \"authType\",\n  storage: storage,\n};\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers =\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  equipment: equipmentReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: pReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  devTools: true,\n  enhancers: composeEnhancers,\n});\nconst persistOr = persistStore(store);\nexport { persistOr, store };\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useSelector } from 'react-redux';\nimport { format } from \"date-fns\";\nimport { useAppSelector } from \"./../../redux/store\";\n\nexport const useGlobalState = () => {\n  const users = useAppSelector((state) => state.users.allUsers);\n  const equipment = useAppSelector((state) => state.equipment.equipment);\n  const useFormatedDate = (date: Date) => format(new Date(date), \"MM/dd/yyyy\");\n   const a11yProps = (index: number) => {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  return {\n    users,\n    useFormatedDate,\n    equipment,\n    a11yProps,\n  };\n};\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport * as Styled from \"./admin-tabs.styles\";\nimport { CustomTabPanel } from \"../tab-panel\";\nimport { useTabsListStyles } from \"./admin-tabs.styles\";\nimport { useGlobalState } from \"../global-states\";\n\nexport const AdminTabs = ({\n  equipmentSelected,\n  users,\n  equipment,\n  request,\n}: {\n  equipmentSelected?: React.ReactNode;\n  users?: React.ReactNode;\n  equipment?: React.ReactNode;\n  request?: React.ReactNode;\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  const { a11yProps } = useGlobalState();\n  const classes = useTabsListStyles();\n\n  return (\n    <Styled.AdminTabsWrapper>\n      <AppBar position=\"static\" className={classes.borders}>\n        <Tabs centered value={value} onChange={handleChange}>\n         {equipmentSelected && <Tab label=\"Equipments-Selected\" {...a11yProps(0)} /> }\n          {users && <Tab label=\"users\" {...a11yProps(1)} />}\n          {equipment && <Tab label=\"Equipment\" {...a11yProps(2)} />}\n          {request && <Tab label=\"Requests\" {...a11yProps(3)} />}\n        </Tabs>\n      </AppBar>\n      <CustomTabPanel value={value} index={0}>\n        {equipmentSelected}\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={0}>\n        {users}\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={1}>\n        {equipment}\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={2}>\n        {request}\n      </CustomTabPanel>\n    </Styled.AdminTabsWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n\nexport const FlexRowEquipmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  display: none;\n  max-height: 350px;\n  overflow-y: auto;\n`;\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({ \n    shadow: {\n        '&:hover': {\n            boxShadow: '13px 10px 10px 1px rgba(0, 0, 0, 0.24)',\n          }\n    }})\n)","export const COLORS = {\n  red: '#ff0000',\n  gray: '#F5F5F7',\n  lightGreen: \"#00e676\",\n  yellow:\"#ffcd38\"\n};\n","import styled from \"styled-components\";\nimport { COLORS } from \"../constants/colors\";\nimport { TextField, DialogActions, } from '@material-ui/core';\n\nexport const ListMainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 500px;\n  overflow-y: auto;\n`;\nexport const ListItem = styled.div`\n  background: ${COLORS.gray};\n  padding: 20px;\n  margin: 20px;\n  border-radius: 15px;\n`;\nexport const EquipmentItem = styled.div`\n  margin-top: 25px;\n`;\nexport const ListItemText = styled.p`\n  font-size: 17px;\n  font-weight: 500;\n  margin: 5px 0;\n  width: 100%;\n`;\nexport const FlexColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const FlexRowWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\nexport const TitleText = styled.span`\n  font-weight: 600;\n`;\nexport const SmallWidthWrapper = styled.div`\n  width: 100%;\n  display: flex;\n`;\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n`\nexport const MenuButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n`\n\nexport const InputWrapper = styled.div`\n    text-align: center;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const DialogActionsStyle = styled(DialogActions)`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nexport const ErrorWrapper = styled.div`\n  color: ${COLORS.red};\n  width: 100%;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  font-size: 12px;\n`;\n\nexport const DateStyle = styled(TextField)`\n  max-width: 194px;\n  width: 100%;\n  margin: 16px;\n`;\n","import { createStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { TextField, DialogActions, } from '@material-ui/core';\nimport { COLORS } from '../../constants/colors';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2.5),\n      width: \"100%\",\n    },\n    marginWithError: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(0),\n      width: \"100%\",\n    },\n    textCenter: {\n      textAlign: \"center\",\n    },\n    width400: {\n      maxWidth: \"400px\",\n      width: \"100%\",\n    },\n    width600:{\n      width:\"600px\",\n    },\n    noMargin: {\n      margin: \"0\",\n      textAlign: \"center\",\n    },\n    dialogActionsStyle: {\n      marginTop: \"10px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n    },\n    \n  })\n);\n\n\nexport const InputWrapper = styled.div`\n    text-align: center;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const DialogActionsStyle = styled(DialogActions)`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nexport const ErrorWrapper = styled.div`\n  color: ${COLORS.red};\n  width: 100%;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  font-size: 12px;\n`;\n\nexport const DateStyle = styled(TextField)`\n  width: 194px;\n  margin: 16px;\n`;","import { Button } from '@material-ui/core';\nimport React from 'react';\n\ninterface IButtonProps {\n  label?: string;\n  onClick?: () => void;\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport const CustomButton: React.FC<IButtonProps> = ({\n  label,\n  onClick,\n  className,\n  type,\n  disabled\n}) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color={disabled ? \"inherit\" :\"primary\"}\n      className={className}\n      onClick={onClick}\n      type={type}\n      disabled={disabled}\n    >\n      {label}\n    </Button>\n  );\n};\n","import { TextField } from '@material-ui/core';\nimport React, { ChangeEventHandler } from 'react';\n\ninterface IInputProps {\n  placeholder: string;\n  onChange?: ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  id: string;\n  className?: string;\n  name?: string;\n  value: string | number;\n  type?: string;\n  multiline?:boolean;\n  rows?:number\n}\n\nexport const Input: React.FC<IInputProps> = ({\n  placeholder,\n  onChange,\n  onBlur,\n  id,\n  className,\n  name,\n  value,\n  type,\n  multiline,\n  rows\n}) => {\n  return (\n    <TextField\n    multiline={multiline}\n    rows={rows}\n      id={id}\n      variant=\"outlined\"\n      name={name}\n      value={value}\n      className={className}\n      label={placeholder}\n      onChange={onChange}\n      onBlur={onBlur}\n      type={type}\n    />\n  );\n};\n","export const getErrorsState = (errors: Object, touched: Object) => {\n  const validate = (nameField: string) => {\n    return (\n      errors[nameField as keyof typeof errors] &&\n      touched[nameField as keyof typeof touched]\n    );\n  };\n  return validate;\n};\n","export const ERRORS = {\n  emailRequired: \"No email provided.\",\n  emailExample: 'Email should be \"example@examle.com\"',\n  passwordRequired: \"No password provided.\",\n  passwordToShort: \"Password is too short - should be 8 chars minimum.\",\n  passwordOnlyLatinLetters: \"Password can only contain Latin letters.\",\n  validName: \"Please enter valid name\",\n  validValues: \"Please enter the valid values\",\n  nameTooShort: \"Name is too short\",\n  valueTooShort: \"Value is too short\",\n  equipmentTypeRequired: \"Equipment type is required\",\n  mustBeNumber: \"Enter a number\",\n  userIsRequired: \"Choose user\",\n  requestTooShort: \"Request message is too short\",\n  requestRequired: \"This field is required to fill\",\n  passwordString:\"Password must consist letters or other symbols\"\n};\n","export const API = {\n  baseUrl: \"https://young-garden-13857.herokuapp.com\",\n  auth:\"/auth\",\n  login:\"/login\"\n}","import axios from 'axios';\nimport { API } from '../constants/api';\n\nconst getInstance = (reduxToken?:string) => {\n  const instance = axios.create({\n    baseURL: API.baseUrl,\n    timeout: 10000,\n  });\n  instance.interceptors.request.use( (config) => {\n    const {users} = JSON.parse(\n      localStorage.getItem('persist:authType') as any\n    );  \n    const { token } = JSON.parse(users);\n  \n    if (!token && !reduxToken) {\n      return config;\n    }\n    config = {\n      ...config,\n      headers: {\n        Authorization: `Bearer ${reduxToken || token}`,\n      },\n    };\n    return config;\n  });\n  return instance;\n};\nexport const postData = (requestUrl: string, payload: any) => {\n  return getInstance().post(`${requestUrl}`, payload);\n};\nexport const fetchData = async (requestUrl: string, params?: {},token?:string) => {\n  return getInstance(token).get(`${requestUrl}`, { params });\n};\nexport const changeData = async (requestUrl: string, payload: any,) => {\n  return getInstance().put(`${requestUrl}`, payload,);\n};\nexport const deleteData = (requestUrl: string, params: {}) => {\n  return getInstance().delete(`${requestUrl}`, { params });\n};\n","export const MAIN_ROUTES = {\n  user: \"user\",\n  equipment: \"equipment\",\n  getAll: \"get-all\",\n  request: \"request\",\n  create:\"create\"\n};\n\n","import { IUser } from './../../redux/userReducer';\nimport { IEquipment } from './../../redux/equipmentReducer';\nimport { deleteData, fetchData, postData, changeData } from \"../../service/api\";\nimport { MAIN_ROUTES } from \"./main.consts\";\n\nexport const MainApiServices = {\n  async getAllUsers(token?:string) {\n    return await fetchData(`${MAIN_ROUTES.user}/${MAIN_ROUTES.getAll}`,{},token);\n  },\n  async deleteUser(id: string) {\n    return await deleteData(`${MAIN_ROUTES.user}/${id}`, {});\n  },\n  async createUser(data: {}) {\n    return await postData(`${MAIN_ROUTES.user}/${MAIN_ROUTES.create}`, data);\n  },\n  async editUser(data: IUser & { equipmentIds: string[] | undefined }) {\n    return await changeData(`${MAIN_ROUTES.user}/${data.id}`, data);\n  },\n\n  async getAllEquipments(token?:string) {\n    return await fetchData(`${MAIN_ROUTES.equipment}/${MAIN_ROUTES.getAll}`,{},token);\n  },\n  async deleteEquipment(id: string) {\n    return await deleteData(`${MAIN_ROUTES.equipment}/${id}`, {});\n  },\n  async createEquipment(data: {}) {\n    return await postData(`${MAIN_ROUTES.equipment}/${MAIN_ROUTES.create}`, data);\n  },\n  async editEquipment(data: IEquipment) {\n    return await changeData(`${MAIN_ROUTES.equipment}/${data.id}`, data);\n  },\n  async createRequest(data: {request:string,equipmentId:string ,user:string},) {\n    return await postData(`${MAIN_ROUTES.request}/${MAIN_ROUTES.create}`, data);\n  },\n  async getAllRequest(token?:string){\n    return await fetchData(`${MAIN_ROUTES.request}`,{},token) \n  },\n  async deleteRequest(id:string){\n    return await deleteData(`${MAIN_ROUTES.request}/${id}`,{})\n  }\n};\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      zIndex: 10,\n      transform: 'translate(-50%, -50%)',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n    overlayBackground: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, .15)',\n      zIndex: 10\n    }\n  }),\n);\n\nexport const Loader = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.overlayBackground}>\n      <div className={classes.root}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    </div>\n   \n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      width: \"100%\",\n      maxWidth: '300px',\n      margin: '20px 0',\n    },\n    option:{\n      width: \"100%\",\n      paddingLeft:\"10px\"\n    }\n  })\n);","import * as React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, {\n  AutocompleteChangeReason,\n} from \"@mui/material/Autocomplete\";\nimport { useStyles } from \"./modal-optinal-select.style\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport { MenuItem } from \"@material-ui/core\";\n\ninterface IEquipmentSelect {\n  equipmentOptions: IEquipment[];\n  onChangeEquipmentOptionHandler: (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: Array<IEquipment>,\n    reason: AutocompleteChangeReason\n  ) => void;\n  optionValue: IEquipment[] | undefined;\n}\n\nexport const EquipmentSelect = ({\n  optionValue,\n  equipmentOptions,\n  onChangeEquipmentOptionHandler,\n}: IEquipmentSelect) => {\n  const classes = useStyles();\n  \n  const filterOptions = equipmentOptions.filter(\n    (equipment) => !optionValue?.some((item) => item.id === equipment.id) && !equipment.user?.id\n  );\n  \n  return (\n    <Autocomplete\n      className={classes.wrapper}\n      multiple\n      value={optionValue}\n      id=\"equipmentAutocomplete\"\n      isOptionEqualToValue={(option, value) => option.name === value.name}\n      onChange={onChangeEquipmentOptionHandler}\n      options={filterOptions}\n      getOptionLabel={(option) => option.name}\n        \n      style={{ width: 500 }}\n      renderInput={(params) => (\n        <TextField {...params} label={\"Choose equipment\"}\n         />\n      )}\n      renderOption={(params,option) => <MenuItem {...params} key={option.id}>{option.name}</MenuItem>}\n    />\n  );\n};\n","import React from \"react\";\nimport * as Styled from \"./modal-users-list.styles\";\nimport { CustomButton } from \"../button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { DialogContentText } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { Input } from \"../input\";\nimport { getErrorsState } from \"../../screens/auth/auth.utils\";\nimport { useModalState } from \"./modal-users-list.state\";\nimport { useStyles } from \".\";\nimport { IUser } from \"../../redux/userReducer\";\nimport { Loader } from \"../loader/index\";\nimport { EquipmentSelect } from \"../modal-optinal-select/modal-optinal-select\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\n\ninterface IUserModal {\n  isUserModalOpen: boolean;\n  modalUserOpenHandler: () => void;\n  itemValues?: IUser;\n  text?: string;\n  itemId?: string;\n  equipments?: IEquipment[];\n}\n\nexport const UserModal = ({\n  modalUserOpenHandler,\n  isUserModalOpen,\n  itemValues = {\n    email: \"\",\n    name: \"\",\n    status: \"\",\n    date: new Date(),\n    id: \"\",\n    equipment: [],\n    password: \"\",\n    requests: [],\n  },\n}: IUserModal) => {\n  const {\n    userValidationScheme,\n    addUsers,\n    editUsers,\n    isSending,\n    equipment,\n    onChangeEquipmentOptionHandler,\n    optionValue,\n  } = useModalState({ defaultEquipmentOptionValues: itemValues.equipment });\n\n  const classes = useStyles();\n\n  const addUserCloseModal = (data: IUser) => addUsers(data, handleClose);\n\n  const editUserCloseModal = (data: IUser) => {\n    editUsers(itemValues, data, handleClose);\n  };\n  const handleClose = () => {\n    modalUserOpenHandler();\n  };\n\n  return (\n    <Dialog\n      open={isUserModalOpen}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\" className={classes.textCenter}>\n        Employee List\n      </DialogTitle>\n      {isSending && <Loader />}\n      <DialogContent className={classes.width400}>\n        <DialogContentText className={classes.noMargin}>\n          Please fill out the forms below.\n        </DialogContentText>\n        <Formik\n          initialValues={itemValues}\n          validateOnBlur\n          onSubmit={itemValues.name ? editUserCloseModal : addUserCloseModal}\n          validationSchema={userValidationScheme}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isValid,\n            dirty,\n          }) => {\n            const validate = getErrorsState(errors, touched);\n            return (\n              <Styled.InputWrapper>\n                <Input\n                  type={\"email\"}\n                  onChange={handleChange(\"email\")}\n                  onBlur={handleBlur(\"email\")}\n                  id=\"email\"\n                  placeholder=\"email\"\n                  value={values.email}\n                  className={\n                    validate(\"email\") ? classes.marginWithError : classes.margin\n                  }\n                />\n                {validate(\"email\") && (\n                  <Styled.ErrorWrapper>{errors.email}</Styled.ErrorWrapper>\n                )}\n\n                <Input\n                  type={\"password\"}\n                  onChange={handleChange(\"password\")}\n                  onBlur={handleBlur(\"password\")}\n                  id=\"password\"\n                  placeholder=\"password\"\n                  value={values.password}\n                  className={\n                    validate(\"password\")\n                      ? classes.marginWithError\n                      : classes.margin\n                  }\n                />\n                {validate(\"password\") && (\n                  <Styled.ErrorWrapper>{errors.password}</Styled.ErrorWrapper>\n                )}\n\n                <Input\n                  type={\"text\"}\n                  onChange={handleChange(\"name\")}\n                  onBlur={handleBlur(\"name\")}\n                  id=\"name\"\n                  placeholder=\"name\"\n                  value={values.name}\n                  className={\n                    validate(\"name\") ? classes.marginWithError : classes.margin\n                  }\n                />\n                {validate(\"name\") && (\n                  <Styled.ErrorWrapper>{errors.name}</Styled.ErrorWrapper>\n                )}\n                <Input\n                  type={\"text\"}\n                  onChange={handleChange(\"status\")}\n                  onBlur={handleBlur(\"status\")}\n                  id=\"status\"\n                  placeholder=\"status\"\n                  value={values.status}\n                  className={\n                    validate(\"status\")\n                      ? classes.marginWithError\n                      : classes.margin\n                  }\n                />\n                {validate(\"status\") && (\n                  <Styled.ErrorWrapper>{errors.status}</Styled.ErrorWrapper>\n                )}\n\n                <EquipmentSelect\n                  equipmentOptions={[...equipment,...itemValues.equipment]}\n                  onChangeEquipmentOptionHandler={\n                    onChangeEquipmentOptionHandler\n                  }\n                  optionValue={optionValue}\n                />\n\n                <DialogActions className={classes.dialogActionsStyle}>\n                  <CustomButton\n                    onClick={handleClose}\n                    type=\"button\"\n                    label=\"Cancel\"\n                  />\n\n                  <CustomButton\n                    onClick={handleSubmit}\n                    label={itemValues.name ? \"Edit\" : \"Add\"}\n                    disabled={itemValues.name ? false : !isValid || !dirty}\n                    type=\"submit\"\n                  />\n                </DialogActions>\n              </Styled.InputWrapper>\n            );\n          }}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { ERRORS } from \"../../constants/errors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MainApiServices } from \"../../screens/main/main.api\";\nimport { addUser, editUser, catchErrors, IUser } from \"../../redux/userReducer\";\nimport {\n  IEquipment,\n  addUserInEquipment,\n  deleteUserInEquipment,\n  addUserInEquip,\n} from \"../../redux/equipmentReducer\";\nimport { RootState } from \"../../redux/store\";\nimport { AutocompleteChangeReason } from \"@mui/material/Autocomplete\";\n\ninterface IDefaultOptions {\n  defaultEquipmentOptionValues?: IEquipment[];\n  defaultUserOptionValues?: IUser;\n}\n\nexport const useModalState = ({\n  defaultEquipmentOptionValues,\n  defaultUserOptionValues,\n}: IDefaultOptions = {}) => {\n  const [isSending, setSending] = React.useState(false);\n  const [filterValues, setFilterValues] = React.useState(\"\");\n\n  const [userOptionValue, setUserOptionValue] = React.useState<IUser | null>(\n    defaultUserOptionValues || null\n  );\n  const { users, equipment} = useSelector((state: RootState) => ({\n    users: state.users.allUsers,\n    equipment: state.equipment.equipment,\n  }));\n\n  const [optionValue, setOptionValue] = React.useState<IEquipment[]>(\n    defaultEquipmentOptionValues || []\n  );\n\n  const onChangeEquipmentOptionHandler = (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IEquipment[],\n    reason: AutocompleteChangeReason\n  ) => {\n    setOptionValue(newValue);\n  };\n\n  const onChangeUserOptionHandler = (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IUser | null,\n    reason: AutocompleteChangeReason\n  ) => {\n    setUserOptionValue(newValue);\n  };\n\n  const deletedOptions = (\n    itemValues: IUser,\n    optionValues: IEquipment[]\n  ): IEquipment[] => {\n    return (\n      itemValues.equipment?.filter((item) =>\n        optionValues.every((option) => option.id !== item.id)\n      ) || []\n    );\n  };\n  const addedOptions = (\n    optionValues: IEquipment[],\n    itemValues: IUser\n  ): IEquipment[] => {\n    return optionValues.filter((item) =>\n      itemValues.equipment?.every((equipment) => equipment.id !== item.id)\n    );\n  };\n\n  const dispatch = useDispatch();\n\n  const addUsers = async (\n    { email, name, status,password }: IUser,\n    closeModal: () => void\n  ) => {\n    try {\n      setSending(true);\n      const userData = await MainApiServices.createUser({\n        email,\n        name,\n        status,\n        password,\n        equipmentIds: optionValue,\n      });\n      dispatch(addUser(userData.data.user));\n\n      const eq = equipment.map((eqItem) => {\n        return userData.data.user.equipmentIds.map(\n          (el: { id: string }) => el.id === eqItem.id\n        )\n          ? { ...eqItem, user: userData.data.user }\n          : eqItem;\n      });\n      optionValue.length && dispatch(addUserInEquip({ equipment: eq }));\n      setSending(false);\n      closeModal();\n\n    } catch (err: any) {\n      dispatch(catchErrors(err.response.data));\n    } finally {\n      setSending(false);\n\n    }\n  };\n\n  const editUsers = async (\n    itemValues: IUser,\n    userData: IUser,\n    closeModal: () => void\n  ) => {\n    try {\n      setSending(true);\n      const ids = optionValue.map((item) => item.id);\n      const { data: editUserData } = await MainApiServices.editUser({\n        ...userData,\n        equipmentIds: ids,\n        equipment: optionValue,\n      });\n      dispatch(editUser({ ...editUserData }));\n\n      const deleted = deletedOptions(itemValues, optionValue);\n\n      const added = addedOptions(optionValue, itemValues);\n\n      dispatch(deleteUserInEquipment({ equipment: deleted }));\n      dispatch(addUserInEquipment({ equipment: added, user: editUserData }));\n      closeModal();\n    } catch (err: any) {\n      dispatch(catchErrors(err.response.data));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const onChangeFilterHandler = (event: { target: { value: string } }) => {\n    setFilterValues(event.target.value);\n  };\n\n  const getItemOnPage = (items: Array<IEquipment | IUser>) =>\n    items.filter((item: { name: string }) =>\n      item.name.toLowerCase().includes(filterValues.toLocaleLowerCase())\n    );\n\n  const userValidationScheme = Yup.object().shape({\n    name: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validName)\n      .max(40)\n      .min(2, ERRORS.nameTooShort)\n      .required(),\n    email: Yup.string()\n      .email(ERRORS.emailExample)\n      .required(ERRORS.emailRequired),\n    password: Yup.string()\n      .typeError(ERRORS.passwordString)\n      .required(ERRORS.passwordRequired)\n      .min(8, ERRORS.passwordToShort)\n      .matches(/[a-zA-Z]/, ERRORS.passwordOnlyLatinLetters),\n    status: Yup.string().min(2, ERRORS.valueTooShort).required(),\n  });\n\n  const equipmentValidationScheme = Yup.object().shape({\n    name: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validName)\n      .max(40)\n      .min(2, ERRORS.nameTooShort)\n      .required(),\n    distributor: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validValues)\n      .max(40)\n      .min(2, ERRORS.valueTooShort)\n      .required(),\n    equipmentType: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validValues)\n      .max(40)\n      .min(2, ERRORS.valueTooShort)\n      .required(ERRORS.equipmentTypeRequired),\n    price: Yup.number()\n      .typeError(ERRORS.mustBeNumber)\n      .min(2, ERRORS.valueTooShort)\n      .required(),\n    status: Yup.string().min(2, ERRORS.valueTooShort).required(),\n  });\n\n  return {\n    userValidationScheme,\n    equipmentValidationScheme,\n    addUsers,\n    editUsers,\n    isSending,\n    onChangeFilterHandler,\n    getItemOnPage,\n    optionValue,\n    onChangeUserOptionHandler,\n    onChangeEquipmentOptionHandler,\n    userOptionValue,\n    users,\n    equipment,\n    deletedOptions,\n    addedOptions,\n  };\n};\n","import React from \"react\";\n\nexport const useEditModalState = () => {\n  const [isOpen, setOpen] = React.useState(false);\n  const [isEditModalOpen, setEditModalOpen] = React.useState(false);\n  const [isRemoveModalOpen, setRemoveModalOpen] = React.useState(false);\n\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const removeItemHandler = () => {\n    setRemoveModalOpen((prevOpen) => !prevOpen);\n    setOpen(false);\n  };\n\n  const handleCloseRemoveModal = () => {\n    setRemoveModalOpen(false);\n  };\n\n  const itemModalOpenHandler = () => {\n    setOpen(false);\n    setEditModalOpen((prevOpen) => !prevOpen);\n  };\n\n  return {\n    handleClose,\n    handleToggle,\n    removeItemHandler,\n    itemModalOpenHandler,\n    isEditModalOpen,\n    anchorRef,\n    isOpen,\n    isRemoveModalOpen,\n    handleCloseRemoveModal,\n  };\n};\n","import React from \"react\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog } from \"@material-ui/core\";\nimport { IUser } from \"../../redux/userReducer\";\n\ninterface IRemoveItemDialog {\n  isRemoveModalOpen: boolean;\n  handleCloseRemoveModal: any;\n  equipmentItemId?: string;\n  userItemId?: string;\n  isSending?: boolean;\n  requestItemId?: string;\n  deleteEquipment?: Function;\n  deleteUser?: Function;\n  deleteRequest?: Function;\n}\n\nexport const RemoveItemDialog = ({\n  isRemoveModalOpen,\n  handleCloseRemoveModal,\n  equipmentItemId,\n  userItemId,\n  isSending,\n  requestItemId,\n  deleteEquipment,\n  deleteUser,\n  deleteRequest,\n}: IRemoveItemDialog) => {\n  const removeItem = () => {\n    if (equipmentItemId && deleteEquipment) {\n      deleteEquipment(equipmentItemId);\n    }\n    if (userItemId && deleteUser) {\n      deleteUser(userItemId);\n    }\n    if (requestItemId && deleteRequest) {\n      deleteRequest(requestItemId);\n    }\n  };\n\n  return (\n    <Dialog\n      open={isRemoveModalOpen}\n      onClose={handleCloseRemoveModal}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Do you really want to delete this entry?\"}\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={handleCloseRemoveModal} color=\"primary\">\n          Disagree\n        </Button>\n        <Button\n          onClick={removeItem}\n          disabled={isSending}\n          color=\"primary\"\n          autoFocus\n        >\n          Agree\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: \"10px\",\n    },\n    editButton: {\n      marginRight: 0,\n      paddingLeft: \"10px\",\n      position: \"relative\",\n      width: \"25%\",\n      marginLeft: 0,\n    },\n    editUserButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: 0,\n    },\n    modalPosition: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n    },\n  })\n);\n","import React from \"react\";\nimport {\n  Popper,\n  Paper,\n  Grow,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport * as Styled from \"../../styles/styles\";\nimport { IUser } from \"../../redux/userReducer\";\nimport { UserModal } from \"../modal-users-list/modal-users-list\";\nimport { useEditModalState } from \"../hooks/edit-modal-state\";\nimport { RemoveItemDialog } from \"../remove-item-dialog/remove-item-dialog\";\nimport { useUserItemState } from \"./user-item.state\";\nimport { useGlobalState } from \"../global-states\";\nimport { useStyles } from \"./user-item.style\";\n\nexport interface IUserItem {\n  user: IUser;\n}\n\nexport const UserItem = ({ user}: IUserItem) => {\n  const {\n    handleClose,\n    handleToggle,\n    removeItemHandler,\n    itemModalOpenHandler,\n    isEditModalOpen,\n    isOpen,\n    anchorRef,\n    isRemoveModalOpen,\n    handleCloseRemoveModal,\n  } = useEditModalState();\n\n  const {isSending,deleteUser,deleteEquipment} = useUserItemState();\n  const { useFormatedDate } = useGlobalState();\n  const classes = useStyles();\n  return (\n    <>\n      <Styled.FlexRowWrapper>\n        <Styled.SmallWidthWrapper>\n          <Styled.ListItemText>\n            <Styled.TitleText>Name: </Styled.TitleText>\n            {user.name}\n          </Styled.ListItemText>\n          <Styled.ListItemText>\n            <Styled.TitleText>Email: </Styled.TitleText>\n            {user.email}\n          </Styled.ListItemText>\n        </Styled.SmallWidthWrapper>\n\n        <Styled.SmallWidthWrapper>\n          <Styled.ListItemText>\n            <Styled.TitleText>Status: </Styled.TitleText>\n            {user.status}\n          </Styled.ListItemText>\n          <Styled.ListItemText>\n            <Styled.TitleText>Create date: </Styled.TitleText>\n            {useFormatedDate(user.date)}\n          </Styled.ListItemText>\n        </Styled.SmallWidthWrapper>\n\n        <IconButton\n          ref={anchorRef}\n          edge=\"start\"\n          className={classes.editUserButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Popper\n          open={isOpen}\n          transition\n          disablePortal\n          anchorEl={anchorRef.current}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={isOpen} id=\"menu-list-grow\">\n                    <MenuItem onClick={itemModalOpenHandler}>\n                      Edit user\n                    </MenuItem>\n                    <MenuItem onClick={removeItemHandler}>\n                      Remove user\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Styled.FlexRowWrapper>\n      <UserModal\n        itemValues={user}\n        isUserModalOpen={isEditModalOpen}\n        modalUserOpenHandler={itemModalOpenHandler}\n      />\n      <RemoveItemDialog\n        isSending={isSending}\n        userItemId={user.id}\n        isRemoveModalOpen={isRemoveModalOpen}\n        handleCloseRemoveModal={handleCloseRemoveModal}\n        deleteUser={deleteUser}\n        deleteEquipment={deleteEquipment}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MainApiServices } from \"../../screens/main/main.api\";\nimport {\n  deleteEquipmentFromUser,\n  IUser,\n  catchErrors,\n} from \"../../redux/userReducer\";\nimport {\n  catchEquipmentErrors,\n  deleteEquipments,\n} from \"../../redux/equipmentReducer\";\nimport { deleteUsers } from \"../../redux/userReducer\";\n\nexport const useUserItemState = () => {\n  const dispatch = useDispatch();\n  const [isSending, setSending] = React.useState(false);\n\n  const deleteEquipment = async (equipmentId: string) => {\n    try {\n      setSending(true);\n      await MainApiServices.deleteEquipment(equipmentId);\n      dispatch(deleteEquipments(equipmentId));\n      dispatch(deleteEquipmentFromUser({ equipmentId: equipmentId }));\n    } catch (err: any) {\n      dispatch(catchEquipmentErrors(err.response.data));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const deleteUser = async (userId: string) => {\n    try {\n      setSending(true);\n      await MainApiServices.deleteUser(userId);\n      dispatch(deleteUsers(userId));\n    } catch (err: any) {\n      dispatch(catchErrors(err.response.data));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return {\n    isSending,\n    deleteEquipment,\n    deleteUser,\n  };\n};\n","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    notification: {\n      fontSize: '24px',\n      textAlign: 'center',\n      paddingTop: '25px'\n      }\n    }),\n);\ninterface INotification {\n  name? : string,\n  \n}\n\nexport const NotificationMessage = ({ name }: INotification) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.notification}>\n            There are no {name || 'users'}\n        </div>\n    )\n}","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inputStyle: {\n        textAlign: 'end',\n        marginTop: '10px',\n        marginRight: '30px'\n    },\n  })\n);\n","import * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useStyles } from './user-filter.style';\n\n\ninterface IFilter {\n  onChangeFilterHandler: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>\n}\nexport const Filter = ({ onChangeFilterHandler }: IFilter) => {\n  \n  const classes = useStyles()\n  return (\n    <div className={classes.inputStyle}>\n      <TextField onChange={onChangeFilterHandler} id=\"outlined-basic\" label=\"Search by name\" variant=\"outlined\" />\n    </div>\n  );\n}\n","\nimport { FlexRowEquipmentWrapper } from \"./users-list.styles\";\nimport * as Styled from \"../../styles/styles\";\nimport { UserItem } from \"../user-item/index\";\nimport { NotificationMessage } from \"../notification-message/ notification-message\";\nimport { useStyles } from \"./users-list.styles\"\nimport { Filter } from \"../user-filter/user-filter\";\nimport { IUser } from \"../../redux/userReducer\";\nimport { useUserState } from \"./users-list.state\";\nimport { useGlobalState } from \"../global-states\";\n\nexport const UsersList = () => {\n  \n  const { users } = useGlobalState()\n  const { onChangeFilterHandler, getItemOnPage } = useUserState();\n  const userClasses = useStyles();\n  const userOnPage = getItemOnPage(users) as IUser[];\n  return (\n    <Styled.ListMainWrapper>\n      <Filter onChangeFilterHandler={onChangeFilterHandler} />\n      {users.length ? (\n        userOnPage.map((user) => {\n          return (\n            <Styled.ListItem\n              key={user.id}\n              className={userClasses.shadow}\n            >\n              <UserItem user={user} />\n\n              <FlexRowEquipmentWrapper id={user.id}>\n                {user.equipment?.map((equipment) => {\n                  return (\n                    <Styled.EquipmentItem key={equipment.id}>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Equipment name: </Styled.TitleText>\n                        {equipment.name}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Distributor: </Styled.TitleText>\n                        {equipment.distributor}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Equipment type: </Styled.TitleText>\n                        {equipment.equipmentType}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Price: </Styled.TitleText>\n                        {equipment.price}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Receiving date: </Styled.TitleText>\n                        {equipment.date}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Equipment status: </Styled.TitleText>\n                        {equipment.status}\n                      </Styled.ListItemText>\n                      <Styled.ListItemText>\n                        <Styled.TitleText>Date of update: </Styled.TitleText>\n                        {equipment.updated}\n                      </Styled.ListItemText>\n                    </Styled.EquipmentItem>\n                  );\n                })}\n              </FlexRowEquipmentWrapper>\n            </Styled.ListItem>\n          );\n        })\n      ) : (\n        <NotificationMessage />\n      )}\n    </Styled.ListMainWrapper>\n  );\n};\n","import React from \"react\";\nimport { IUser } from \"../../redux/userReducer\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\n\nexport const useUserState = () => {\n  const [filterValues, setFilterValues] = React.useState(\"\");\n  const getItemOnPage = (items: Array<IEquipment | IUser>) =>\n    items.filter((item: { name: string }) =>\n      item.name.toLowerCase().includes(filterValues.toLocaleLowerCase())\n    );\n  const onChangeFilterHandler = (event: { target: { value: string } }) => {\n    setFilterValues(event.target.value);\n  };\n  return {\n    getItemOnPage,\n    onChangeFilterHandler,\n  };\n};\n","import { createStyles } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { TextField, DialogActions } from \"@material-ui/core\";\nimport { COLORS } from \"../../constants/colors\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2.5),\n      width: \"100%\",\n    },\n    marginWithError: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(0),\n      width: \"100%\",\n    },\n    textCenter: {\n      textAlign: \"center\",\n    },\n    width400: {\n      maxWidth: \"400px\",\n      width: \"100%\",\n    },\n    width600: {\n      width: \"600px\",\n    },\n    noMargin: {\n      margin: \"0\",\n      textAlign: \"center\",\n    },\n    dialogActionsStyle: {\n      marginTop: \"10px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const InputWrapper = styled.div`\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const DialogActionsStyle = styled(DialogActions)`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nexport const ErrorWrapper = styled.div`\n  color: ${COLORS.red};\n  width: 100%;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  font-size: 12px;\n`;\n\nexport const DateStyle = styled(TextField)`\n  width: 194px;\n  margin: 16px;\n`;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      width: \"100%\",\n      maxWidth: '300px',\n      margin: '20px 0'\n    },\n  })\n);","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, {\n  AutocompleteChangeReason,\n  createFilterOptions,\n} from \"@mui/material/Autocomplete\";\nimport { IUser } from \"../../redux/userReducer\";\nimport { useStyles } from \"./modal-equipment-user-select.style\";\nimport { MenuItem } from \"@material-ui/core\";\n\nconst filterOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option: IUser) => option.name,\n});\ninterface IUserSelect {\n  usersOptions: IUser[];\n  onChangeUserOptionHandler: (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IUser | null,\n    reason: AutocompleteChangeReason\n  ) => void;\n  equipmentId: string | undefined;\n  userOptionValue: IUser | null;\n}\n\nexport const UserSelect = ({\n  usersOptions,\n  onChangeUserOptionHandler,\n  equipmentId,\n  userOptionValue,\n}: IUserSelect) => {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      className={classes.wrapper}\n      value={\"\" || userOptionValue}\n      id=\"filter-demo\"\n      options={usersOptions}\n      getOptionLabel={(option) => option.name}\n      filterOptions={filterOptions}\n      onChange={onChangeUserOptionHandler}\n      renderInput={(params) => <TextField {...params} label=\"Choose user\" />}\n      sx={{ width: 300 }}\n      renderOption={(params, option) => (\n        <MenuItem {...params} key={option.id}>\n          {option.name}\n        </MenuItem>\n      )}\n    />\n  );\n};\n","import React from \"react\";\nimport * as Styled from \"./modal-equipment-list.styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { DialogContentText } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { Input } from \"../input\";\nimport { getErrorsState } from \"../../screens/auth/auth.utils\";\nimport { useStyles } from \".\";\nimport { CustomButton } from \"../button\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport { Loader } from \"../loader/index\";\nimport { UserSelect } from \"../modal-equipment-user-select/modal-equipment-user-select\";\nimport { useModalEquipmentState } from \"./modal-equipment-list.state\";\nimport { useGlobalState } from \"../global-states\";\n\ninterface IEquipmentModal {\n  isEquipmentsModalOpen: boolean;\n  modalEquipmentsOpenHandler: () => void;\n  itemValues?: IEquipment;\n}\n\nexport const EquipmentsModal = ({\n  isEquipmentsModalOpen,\n  modalEquipmentsOpenHandler,\n  itemValues = {\n    name: \"\",\n    distributor: \"\",\n    equipmentType: \"\",\n    price: 0,\n    status: \"\",\n    date: new Date(),\n    id: \"\",\n    userId: \"\",\n    updated: new Date(),\n    user: undefined,\n  },\n}: IEquipmentModal) => {\n  const {\n    equipmentValidationScheme,\n    addEquipment,\n    editEquipment,\n    isSending,\n    onChangeUserOptionHandler,\n    userOptionValue,\n  } = useModalEquipmentState({\n    defaultUserOptionValues: itemValues.user || undefined,\n  });\n  const { users } = useGlobalState();\n  const classes = useStyles();\n  const handleClose = () => {\n    modalEquipmentsOpenHandler();\n  };\n  const addEquipmentCloseModal = (data: IEquipment) =>\n    addEquipment(data, handleClose);\n  const editEquipmentCloseModal = (data: IEquipment) =>\n    editEquipment(data, handleClose);\n\n  return (\n    <div>\n      <Dialog\n        open={isEquipmentsModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\" className={classes.textCenter}>\n          Equipment List\n        </DialogTitle>\n        <DialogContent className={classes.width400}>\n          <DialogContentText className={classes.noMargin}>\n            Please fill out the forms below.\n          </DialogContentText>\n          {isSending && <Loader />}\n          <Formik\n            initialValues={itemValues}\n            validateOnBlur\n            onSubmit={\n              itemValues.name !== \"\"\n                ? editEquipmentCloseModal\n                : addEquipmentCloseModal\n            }\n            validationSchema={equipmentValidationScheme}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isValid,\n              dirty,\n            }) => {\n              const validate = getErrorsState(errors, touched);\n              return (\n                <Styled.InputWrapper>\n                  <Input\n                    type={\"text\"}\n                    onChange={handleChange(\"name\")}\n                    onBlur={handleBlur(\"name\")}\n                    id=\"name\"\n                    placeholder=\"name\"\n                    value={values.name}\n                    className={\n                      validate(\"name\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"name\") && (\n                    <Styled.ErrorWrapper>{errors.name}</Styled.ErrorWrapper>\n                  )}\n\n                  <Input\n                    type={\"text\"}\n                    onChange={handleChange(\"distributor\")}\n                    onBlur={handleBlur(\"distributor\")}\n                    id=\"distributor\"\n                    placeholder=\"distributor\"\n                    value={values.distributor}\n                    className={\n                      validate(\"distributor\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"distributor\") && (\n                    <Styled.ErrorWrapper>\n                      {errors.distributor}\n                    </Styled.ErrorWrapper>\n                  )}\n\n                  <Input\n                    type={\"text\"}\n                    onChange={handleChange(\"equipmentType\")}\n                    onBlur={handleBlur(\"equipmentType\")}\n                    id=\"equipment type\"\n                    placeholder=\"equipment type\"\n                    value={values.equipmentType}\n                    className={\n                      validate(\"equipmentType\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"equipmentType\") && (\n                    <Styled.ErrorWrapper>\n                      {errors.equipmentType}\n                    </Styled.ErrorWrapper>\n                  )}\n\n                  <Input\n                    type={\"text\"}\n                    onChange={handleChange(\"price\")}\n                    onBlur={handleBlur(\"price\")}\n                    id=\"price\"\n                    placeholder=\"price\"\n                    value={values.price}\n                    className={\n                      validate(\"price\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"price\") && (\n                    <Styled.ErrorWrapper>{errors.price}</Styled.ErrorWrapper>\n                  )}\n\n                  <Input\n                    type={\"text\"}\n                    onChange={handleChange(\"status\")}\n                    onBlur={handleBlur(\"status\")}\n                    id=\"status\"\n                    placeholder=\"status\"\n                    value={values.status}\n                    className={\n                      validate(\"status\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"status\") && (\n                    <Styled.ErrorWrapper>{errors.status}</Styled.ErrorWrapper>\n                  )}\n\n                  <UserSelect\n                    usersOptions={users}\n                    onChangeUserOptionHandler={\n                      onChangeUserOptionHandler\n                    }\n                    equipmentId={itemValues.id}\n                    userOptionValue={userOptionValue}\n                  />\n\n                  <DialogActions className={classes.dialogActionsStyle}>\n                    <CustomButton\n                      onClick={handleClose}\n                      type=\"button\"\n                      label=\"Cancel\"\n                    />\n                    <CustomButton\n                      onClick={handleSubmit}\n                      label={itemValues.name ? \"Edit\" : \"Add\"}\n                      disabled={itemValues.name ? !isValid : !isValid || !dirty}\n                      type=\"submit\"\n                    />\n                  </DialogActions>\n                </Styled.InputWrapper>\n              );\n            }}\n          </Formik>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","import { useAppSelector } from './../../redux/store';\nimport { AutocompleteChangeReason } from \"@mui/material/Autocomplete\";\nimport * as Yup from \"yup\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MainApiServices } from \"./../../screens/main/main.api\";\nimport { addThatUserEquipment, deleteThatUserEquipment, IUser } from \"./../../redux/userReducer\";\nimport {\n  addEquipments,\n  catchEquipmentErrors,\n  clearUser,\n  editEquipments,\n  IEquipment,\n} from \"../../redux/equipmentReducer\";\nimport {\n  updateEquipmentInUser,\n  addEquipmentInUser,\n  deleteEquipmentFromUser,\n} from \"../../redux/userReducer\";\nimport { ERRORS } from \"../../constants/errors\";\n\ninterface IDefaultEquipmentOptions {\n  defaultUserOptionValues?: IUser;\n}\n\nexport const useModalEquipmentState = ({\n  defaultUserOptionValues,\n}: IDefaultEquipmentOptions = {}) => {\n  const [isSending, setSending] = React.useState(false);\n  const [userOptionValue, setUserOptionValue] =\n    React.useState<IUser | null>(defaultUserOptionValues || null);\n  const dispatch = useDispatch();\n  const thatUser = useAppSelector( state=> state.users.thatUser)\n  const addEquipment = async (\n    { name, distributor, equipmentType, price, status }: IEquipment,\n    closeModal: () => void\n  ) => {\n    try {\n      setSending(true);\n      const equipmentData = await MainApiServices.createEquipment({\n        name,\n        distributor,\n        equipmentType,\n        price,\n        status,\n        user: userOptionValue,\n      });\n      setUserOptionValue(null);\n      dispatch(addEquipments(equipmentData.data));\n      dispatch(\n        updateEquipmentInUser({\n          id: userOptionValue?.id,\n          equipment: equipmentData.data,\n        })\n      );\n      if(thatUser.id === userOptionValue?.id){\n          dispatch(addThatUserEquipment(equipmentData.data))\n      }\n\n      closeModal();\n    } catch (err: any) {\n      dispatch(catchEquipmentErrors(err.response.data.message));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const editEquipment = async (data: IEquipment, closeModal: () => void) => {\n    \n    try {\n      setSending(true);\n      \n      const editEquipmentData = await MainApiServices.editEquipment({\n        ...data,\n        userId: userOptionValue?.id || null,\n      });\n      dispatch(editEquipments(editEquipmentData.data ));\n\n      dispatch(addEquipmentInUser({ equipment: editEquipmentData.data }));\n      if(thatUser.id === userOptionValue?.id && !thatUser.equipment.some((elem)=> elem.id === data.id )){\n        dispatch(addThatUserEquipment(editEquipmentData.data))\n    }\n      if (userOptionValue === null) {\n        dispatch(clearUser({ equipmentId: data.id }));\n        dispatch(\n          deleteEquipmentFromUser({\n            equipmentId: editEquipmentData.data.id,\n          })\n        );\n        if(thatUser.equipment.some((elem)=> elem.id === data.id )){\n          dispatch(deleteThatUserEquipment(data))\n        }\n        \n      }\n      \n      closeModal();\n    } catch (err: any) {\n      dispatch(catchEquipmentErrors(err.response.data));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  \n\n  const onChangeUserOptionHandler = (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IUser | null,\n    reason: AutocompleteChangeReason\n  ) => {\n    setUserOptionValue(newValue);\n  };\n\n  const equipmentValidationScheme = Yup.object().shape({\n    name: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validName)\n      .max(40)\n      .min(2, ERRORS.nameTooShort)\n      .required(),\n    distributor: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validValues)\n      .max(40)\n      .min(2, ERRORS.valueTooShort)\n      .required(),\n    equipmentType: Yup.string()\n      .matches(/^[A-Za-z ]*$/, ERRORS.validValues)\n      .max(40)\n      .min(2, ERRORS.valueTooShort)\n      .required(ERRORS.equipmentTypeRequired),\n    price: Yup.number()\n      .typeError(ERRORS.mustBeNumber)\n      .min(2, ERRORS.valueTooShort)\n      .required(),\n    status: Yup.string().min(2, ERRORS.valueTooShort).required(),\n  });\n\n  return {\n    equipmentValidationScheme,\n    addEquipment,\n    editEquipment,\n    isSending,\n    onChangeUserOptionHandler,\n    userOptionValue,\n  };\n};\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    shadow: {\n      \"&:hover\": {\n        boxShadow: \"13px 10px 10px 1px rgba(0, 0, 0, 0.24)\",\n      },\n    },\n    menuButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: \"10px\",\n    },\n    editButton: {\n      marginRight: 0,\n      paddingLeft: \"10px\",\n      position: \"relative\",\n      width: \"15%\",\n      marginLeft: 0,\n      height: \"30px\",\n      alignSelf:\"center\"\n    },\n    editUserButton: {\n      marginRight: 0,\n      padding: 0,\n      marginLeft: 0,\n    },\n    modalPosition: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n    },\n\n  })\n);\n","import React from \"react\";\nimport * as Styled from \"../../styles/styles\";\nimport {\n  Popper,\n  Paper,\n  Grow,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n} from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { EquipmentsModal } from \"../modal-equipments-list/modal-equipments-list\";\nimport { useEditModalState } from \"../hooks/edit-modal-state\";\nimport { RemoveItemDialog } from \"../remove-item-dialog/remove-item-dialog\";\nimport { useStyles } from \"./equipment-item.style\";\nimport { useEquipmentItemState } from \"./equipment-item.state\";\nimport { useGlobalState } from \"../global-states\";\n\nexport interface IEquipmentItem {\n  equipmentItem: IEquipment;\n  selectedItemGroup?: boolean;\n}\n\nexport const EquipmentItem = ({\n  equipmentItem,\n  selectedItemGroup,\n}: IEquipmentItem) => {\n  const {\n    handleClose,\n    handleToggle,\n    removeItemHandler,\n    itemModalOpenHandler,\n    isEditModalOpen,\n    isOpen,\n    anchorRef,\n    isRemoveModalOpen,\n    handleCloseRemoveModal,\n  } = useEditModalState();\n\n  const { isSending, deleteUser, deleteEquipment } = useEquipmentItemState();\n  const { useFormatedDate } = useGlobalState();\n  const listClasses = useStyles();\n  return (\n    <>\n      <Styled.ListItem className={listClasses.shadow}>\n        <Styled.FlexRowWrapper>\n          <Styled.SmallWidthWrapper>\n            <Styled.ListItemText>\n              <Styled.TitleText>Name: </Styled.TitleText>\n              {equipmentItem.name}\n            </Styled.ListItemText>\n\n            <Styled.ListItemText>\n              <Styled.TitleText>Distributor: </Styled.TitleText>\n              {equipmentItem.distributor}\n            </Styled.ListItemText>\n\n            <Styled.ListItemText>\n              <Styled.TitleText>Status: </Styled.TitleText>\n              {equipmentItem.status}\n            </Styled.ListItemText>\n\n            <Styled.ListItemText>\n              <Styled.TitleText>Equipment Type: </Styled.TitleText>\n              {equipmentItem.equipmentType}\n            </Styled.ListItemText>\n          </Styled.SmallWidthWrapper>\n\n          <Styled.SmallWidthWrapper>\n            <Styled.ListItemText>\n              <Styled.TitleText>Price: </Styled.TitleText>\n              {equipmentItem.price}\n            </Styled.ListItemText>\n\n            <Styled.ListItemText>\n              <Styled.TitleText>User id: </Styled.TitleText>\n              {equipmentItem.user?.id}\n            </Styled.ListItemText>\n\n            <Styled.ListItemText>\n              <Styled.TitleText>Create date: </Styled.TitleText>\n              {useFormatedDate(equipmentItem.date)}\n            </Styled.ListItemText>\n\n            <Styled.MenuButtonContainer>\n              {!selectedItemGroup && (\n                <IconButton\n                  id={equipmentItem.id}\n                  edge=\"start\"\n                  className={listClasses.editButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                  onClick={handleToggle}\n                  ref={anchorRef}\n                >\n                  <MenuIcon />\n                </IconButton>\n              )}\n            </Styled.MenuButtonContainer>\n          </Styled.SmallWidthWrapper>\n\n          {!selectedItemGroup && (\n            <Popper\n              open={isOpen}\n              transition\n              disablePortal\n              className={listClasses.modalPosition}\n              anchorEl={anchorRef.current}\n            >\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{\n                    transformOrigin:\n                      placement === \"bottom\" ? \"center top\" : \"center bottom\",\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={isOpen} id=\"menu-list-grow\">\n                        <MenuItem onClick={itemModalOpenHandler}>\n                          Edit equipment\n                        </MenuItem>\n                        <MenuItem onClick={removeItemHandler}>\n                          Remove equipment\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          )}\n        </Styled.FlexRowWrapper>\n      </Styled.ListItem>\n      <EquipmentsModal\n        itemValues={equipmentItem}\n        isEquipmentsModalOpen={isEditModalOpen}\n        modalEquipmentsOpenHandler={itemModalOpenHandler}\n      />\n      <RemoveItemDialog\n        isSending={isSending}\n        equipmentItemId={equipmentItem.id}\n        isRemoveModalOpen={isRemoveModalOpen}\n        handleCloseRemoveModal={handleCloseRemoveModal}\n        deleteEquipment={deleteEquipment}\n        deleteUser={deleteUser}\n      />\n    </>\n  );\n};\n","import { MainApiServices } from \"./../../screens/main/main.api\";\nimport { useDispatch } from \"react-redux\";\nimport { IUser } from \"./../../redux/userReducer\";\nimport React from \"react\";\nimport {\n  deleteEquipments,\n  catchEquipmentErrors,\n} from \"../../redux/equipmentReducer\";\nimport {\n  deleteEquipmentFromUser,\n  deleteUsers,\n  catchErrors,\n} from \"../../redux/userReducer\";\n\nexport const useEquipmentItemState = () => {\n  const dispatch = useDispatch();\n  const [isSending, setSending] = React.useState(false);\n \n  const deleteEquipment = async (equipmentId: string) => {\n    try {\n      setSending(true);\n      await MainApiServices.deleteEquipment(equipmentId);\n      dispatch(deleteEquipments(equipmentId));\n      dispatch(deleteEquipmentFromUser({ equipmentId: equipmentId }));\n    } catch (err: any) {\n      dispatch(catchEquipmentErrors(err.response.data));\n    } finally {\n      setSending(false);\n    }\n  };\n  const deleteUser = async (userId: string) => {\n    try {\n      setSending(true);\n      await MainApiServices.deleteUser(userId);\n      dispatch(deleteUsers(userId));\n    } catch (err: any) {\n      dispatch(catchErrors(err.response.data.message || err.message));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return {\n    isSending,\n    deleteUser,\n    deleteEquipment\n  };\n};\n","import { IEquipment } from \"../../redux/equipmentReducer\";\nimport * as Styled from \"../../styles/styles\";\nimport { Filter } from \"../user-filter/index\";\nimport { EquipmentItem } from \"../equipment-item/index\";\nimport { useGlobalState } from \"../global-states\";\nimport { NotificationMessage } from \"../notification-message/ notification-message\";\nimport { useEquipmentState } from \"./equipment-list.state\";\n\nexport const EquipmentList = () => {\n  const { equipment } = useGlobalState()\n  const { onChangeFilterHandler, getItemOnPage } = useEquipmentState();\n \n  const equipmentOnPage = getItemOnPage(equipment) as IEquipment[];\n  return (\n    <Styled.ListMainWrapper>\n      <Filter onChangeFilterHandler={onChangeFilterHandler} />\n      {equipment.length ? (\n        equipmentOnPage.map((equipmentItem) => {\n          return (\n            <EquipmentItem\n              key={equipmentItem.id}\n              equipmentItem={equipmentItem}\n            />\n          );\n        })\n      ) : (\n        <NotificationMessage name={\"equipment\"} />\n      )}\n    </Styled.ListMainWrapper>\n  );\n};\n","import  React  from \"react\";\nimport { IUser } from \"./../../redux/userReducer\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\n\nexport const useEquipmentState = () => {\n  const [filterValues, setFilterValues] = React.useState(\"\");\n  const getItemOnPage = (items: Array<IEquipment | IUser>) =>\n    items.filter((item: { name: string }) =>\n      item.name.toLowerCase().includes(filterValues.toLocaleLowerCase())\n    );\n  const onChangeFilterHandler = (event: { target: { value: string } }) => {\n    setFilterValues(event.target.value);\n  };\n  return {\n    getItemOnPage,\n    onChangeFilterHandler,\n  };\n};\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n  })\n);\n\nexport const useHeaderState = () => {\n  const classes = useStyles();\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n\n  const [isEquipmentsModalOpen, setEquipmentsModalOpen] = React.useState(false);\n  const modalEquipmentsOpenHandler = () => {\n    setEquipmentsModalOpen((prevOpen) => !prevOpen);\n  };\n\n  const [isUsersModalOpen, setUsersModalOpen] = React.useState(false);\n  const userModalOpenHandler = () => {\n    setUsersModalOpen((prevOpen) => !prevOpen);\n  };\n  const [isRequestModalOpen, setRequestModalOpen] = React.useState(false);\n  const requestOpenHandler = () => {\n    setRequestModalOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const addEquipmentHandler = (event: React.MouseEvent<EventTarget>) => {\n    handleClose(event);\n    modalEquipmentsOpenHandler();\n  };\n\n  const addUser = (event: React.MouseEvent<EventTarget>) => {\n    handleClose(event);\n    userModalOpenHandler();\n  };\n  function requestEquipment(event: React.MouseEvent<EventTarget>) {\n    handleClose(event);\n    requestOpenHandler();\n  }\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  return {\n    useStyles,\n    isEquipmentsModalOpen,\n    modalEquipmentsOpenHandler,\n    setUsersModalOpen,\n    isRequestModalOpen,\n    isUsersModalOpen,\n    userModalOpenHandler,\n    requestOpenHandler,\n    handleToggle,\n    handleClose,\n    addEquipmentHandler,\n    addUser,\n    handleListKeyDown,\n    classes,\n    open,\n    anchorRef,\n    requestEquipment,\n  };\n};\n","import styled from 'styled-components';\nimport { TextField, DialogActions, } from '@material-ui/core';\nimport { COLORS } from '../../constants/colors';\nimport { createStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2.5),\n      width: \"100%\",\n    },\n    marginWithError: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(0),\n      width: \"100%\",\n    },\n    textCenter: {\n      textAlign: \"center\",\n    },\n    width400: {\n      maxWidth: \"400px\",\n      width: \"100%\",\n    },\n    width600:{\n      width:\"600px\",\n    },\n    noMargin: {\n      margin: \"0\",\n      textAlign: \"center\",\n    },\n    dialogActionsStyle: {\n      marginTop: \"10px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n    },\n    \n  })\n);\n\n\n","import { useAppSelector } from \"./../../redux/store\";\nimport {\n  AutocompleteChangeReason,\n} from \"@mui/material/Autocomplete\";\nimport { IEquipment } from \"./../../redux/equipmentReducer\";\nimport React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport { ERRORS } from \"../../constants/errors\";\nimport { useDispatch } from \"react-redux\";\nimport { MainApiServices } from \"../../screens/main/main.api\";\nimport { addRequest, catchErrors} from \"../../redux/userReducer\";\n\nconst initialOptionValue: IEquipment = {\n  id: \"\",\n  name: \"\",\n  userId: null,\n  distributor: \"\",\n  equipmentType: \"\",\n  price: 0,\n  date: new Date(),\n  status: \"\",\n  updated: new Date(),\n  user: null,\n};\n\nexport const useRequestModalState = () => {\n  const [isSending, setSending] = React.useState(false);\n\n  const dispatch = useDispatch();\n\n  const [isDirty,setDirty] = React.useState(false)\n  const [optionValue, setOptionValue] = React.useState<IEquipment | null>(\n    initialOptionValue\n  );\n  const thatUser = useAppSelector((state) => state.users.thatUser);\n  const onChangeEquipmentOptionHandler = (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IEquipment | null,\n    reason: AutocompleteChangeReason\n  ) => {\n    \n    setOptionValue(newValue);\n    setDirty(true)\n  };\n  const addNewRequest = async (newRequest: string, closeModal: () => void) => {\n    try {\n      if (!optionValue || Array.isArray(optionValue)) {\n        return;\n      }\n      const requestData = await MainApiServices.createRequest({\n        request: newRequest,\n        equipmentId: optionValue.id,\n        user: thatUser.id,\n      });\n\n      dispatch(addRequest(requestData.data));\n      closeModal();\n    } catch (err: any) {\n      dispatch(catchErrors(err.response.data.message || err.message));\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const requestValidationScheme = Yup.object().shape({\n    request: Yup.string()\n      .min(10, ERRORS.requestTooShort)\n      .max(100)\n      .required(ERRORS.requestRequired),\n  });\n\n  return {\n    requestValidationScheme,\n    addNewRequest,\n    isSending,\n    onChangeEquipmentOptionHandler,\n    optionValue,\n    isDirty,\n    setDirty\n  };\n};\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2.5),\n      width: \"100%\",\n    },\n    marginWithError: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(0),\n      width: \"100%\",\n    },\n    textCenter: {\n      textAlign: \"center\",\n    },\n    width400: {\n      maxWidth: \"400px\",\n      width: \"100%\",\n    },\n    width600: {\n      width: \"600px\",\n    },\n    noMargin: {\n      margin: \"0\",\n      textAlign: \"center\",\n    },\n    dialogActionsStyle: {\n      marginTop: \"10px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n    },\n  })\n);\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      width: \"50%\",\n      maxWidth: '500px',\n      margin: '20px 0',\n    },\n    option:{\n      width: \"100%\",\n      paddingLeft:\"10px\"\n    }\n  })\n);","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, {\n  AutocompleteChangeReason,\n} from \"@mui/material/Autocomplete\";\nimport { useStyles } from \"./single-modal-equipment-select.style\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport { MenuItem } from \"@material-ui/core\";\n\ninterface IEquipmentSelect {\n  equipmentOptions: IEquipment[];\n  onChangeEquipmentOptionHandler: (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IEquipment | null,\n    reason: AutocompleteChangeReason\n  ) => void;\n}\n\nexport const EquipmentSingleSelect = ({\n  equipmentOptions,\n  onChangeEquipmentOptionHandler,\n}: IEquipmentSelect) => {\n  const classes = useStyles();\n  const checkEquility = (option: IEquipment, value: IEquipment) => {\n    return option.name === value.name;\n  };\n  const getDefaultContentText = (option: IEquipment) => option.name;\n\n  return (\n    <Autocomplete\n      className={classes.wrapper}\n      id=\"equipmentAutocomplete\"\n      isOptionEqualToValue={checkEquility}\n      onChange={onChangeEquipmentOptionHandler}\n      options={equipmentOptions}\n      getOptionLabel={getDefaultContentText}\n      renderInput={(params) => (\n        <TextField {...params} label={\"Choose equipment\"} />\n      )}\n      renderOption={(params, option) => (\n        <MenuItem {...params} key={option.id}>\n          {option.name}\n        </MenuItem>\n      )}\n    />\n  );\n};\n","import React from \"react\";\nimport * as Styled from \"../../styles/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { DialogContentText } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { Input } from \"../input\";\nimport { getErrorsState } from \"../../screens/auth/auth.utils\";\nimport { useStyles } from \"./modal-request-list.styles\";\nimport { CustomButton } from \"../button\";\nimport { Loader } from \"../loader/index\";\nimport { useRequestModalState } from \"./modal-request-list.state\";\nimport { useGlobalState } from \"../global-states\";\nimport { EquipmentSingleSelect } from \"../single-modal-equipment-select\";\nimport { useAppSelector } from \"../../redux/store\";\n\nexport interface IRequestMessage {\n  request: string;\n}\ninterface IRequestModal {\n  isRequestModalOpen: boolean;\n  modalRequestOpenHandler: () => void;\n  itemValues?: {\n    request: string;\n  };\n}\n\nexport const RequestModal = ({\n  isRequestModalOpen,\n  modalRequestOpenHandler,\n  itemValues = {\n    request: \"\",\n  },\n}: IRequestModal) => {\n  const {\n    requestValidationScheme,\n    addNewRequest,\n    isSending,\n    onChangeEquipmentOptionHandler,\n    optionValue,\n    isDirty,\n    setDirty,\n  } = useRequestModalState();\n\n  const { equipment } = useGlobalState();\n  const thatUserEquipment = useAppSelector(\n    (state) => state.users.thatUser.equipment\n  );\n  const classes = useStyles();\n  \n  const handleClose = () => {\n    setDirty(false);\n    modalRequestOpenHandler();\n  };\n  const addRequestCloseModal = (data: IRequestMessage) =>\n    addNewRequest(data.request, handleClose);\n  \n  const filteredEquipment = equipment.filter((item) => {\n    const req = thatUserEquipment.some((item2) => item2.id === item.id);\n\n    return !req;\n  });\n\n  return (\n    <div>\n      <Dialog\n        open={isRequestModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\" className={classes.textCenter}>\n          Request Message\n        </DialogTitle>\n        <DialogContent className={classes.width600}>\n          <DialogContentText className={classes.noMargin}>\n            Please fill out the forms below.\n          </DialogContentText>\n          {isSending && <Loader />}\n          <Formik\n            initialValues={itemValues}\n            validateOnBlur\n            onSubmit={addRequestCloseModal}\n            validationSchema={requestValidationScheme}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isValid,\n              dirty,\n            }) => {\n              const validate = getErrorsState(errors, touched);\n              return (\n                <Styled.InputWrapper>\n                  <Input\n                    type={\"text\"}\n                    multiline={true}\n                    rows={4}\n                    onChange={handleChange(\"request\")}\n                    onBlur={handleBlur(\"request\")}\n                    id=\"request\"\n                    placeholder=\"message\"\n                    value={values.request}\n                    className={\n                      validate(\"request\")\n                        ? classes.marginWithError\n                        : classes.margin\n                    }\n                  />\n                  {validate(\"request\") && (\n                    <Styled.ErrorWrapper>{errors.request}</Styled.ErrorWrapper>\n                  )}\n                  <EquipmentSingleSelect\n                    equipmentOptions={filteredEquipment}\n                    onChangeEquipmentOptionHandler={\n                      onChangeEquipmentOptionHandler\n                    }\n                  />\n                  {isDirty && !optionValue && (\n                    <Styled.ErrorWrapper>\n                      Equipment is not selected\n                    </Styled.ErrorWrapper>\n                  )}\n                  <DialogActions className={classes.dialogActionsStyle}>\n                    <CustomButton\n                      onClick={handleClose}\n                      type=\"button\"\n                      label=\"Cancel\"\n                    />\n                    <CustomButton\n                      onClick={handleSubmit}\n                      disabled={itemValues.request ? false : !isValid || !dirty}\n                      label={\"create\"}\n                      type=\"submit\"\n                    />\n                  </DialogActions>\n                </Styled.InputWrapper>\n              );\n            }}\n          </Formik>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  ClickAwayListener,\n  Grow,\n  IconButton,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { EquipmentsModal } from \"../modal-equipments-list/modal-equipments-list\";\nimport { UserModal } from \"../modal-users-list/modal-users-list\";\nimport { useHeaderState } from \"./header.state\";\nimport { RequestModal } from \"../modal-request-list/modal-request-list\";\nimport { useAppSelector } from \"../../redux/store\";\n\ninterface IHeaderProps {\n  onClick: () => void;\n}\n\nexport const Header: React.FC<IHeaderProps> = ({ onClick }) => {\n  const {\n    isEquipmentsModalOpen,\n    userModalOpenHandler,\n    modalEquipmentsOpenHandler,\n    requestOpenHandler,\n    isUsersModalOpen,\n    isRequestModalOpen,\n    handleToggle,\n    handleClose,\n    addEquipmentHandler,\n    addUser,\n    handleListKeyDown,\n    classes,\n    open,\n    anchorRef,\n    requestEquipment,\n  } = useHeaderState();\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current!.focus();\n    }\n\n    prevOpen.current = open;\n  }, [anchorRef, open]);\n  const userRole = useAppSelector((state) => state.users.thatUser.role);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          ref={anchorRef}\n          onClick={handleToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"menu-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                  >\n                    {userRole === \"Admin\" && (\n                      <MenuItem onClick={addUser}>Add employee\n                      </MenuItem>\n                    )}\n                    {userRole === \"Admin\" && (\n                      <MenuItem onClick={addEquipmentHandler}>\n                        Add equipment\n                      </MenuItem>\n\n                    )}\n                    {userRole === \"User\" && (\n                      <MenuItem onClick={requestEquipment}>\n                        Make Request\n                      </MenuItem>\n                    )}\n\n                    <MenuItem onClick={onClick}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n        <Typography variant=\"h6\" className={classes.title}>\n         {userRole === \"Admin\" ? \"Admin\" : \"User\"} panel\n        </Typography>\n        <Button onClick={onClick} color=\"inherit\">\n          Logout\n        </Button>\n        {userRole === \"Admin\" ? (\n          <>\n            <EquipmentsModal\n              isEquipmentsModalOpen={isEquipmentsModalOpen}\n              modalEquipmentsOpenHandler={modalEquipmentsOpenHandler}\n            />\n            <UserModal\n              isUserModalOpen={isUsersModalOpen}\n              modalUserOpenHandler={userModalOpenHandler}\n            />\n          </>\n        ) : (\n          <RequestModal\n            isRequestModalOpen={isRequestModalOpen}\n            modalRequestOpenHandler={requestOpenHandler}\n          />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import styled  from 'styled-components';\nimport { createStyles } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { borderColor } from \"@mui/system\";\nimport { purple } from '@material-ui/core/colors';\nimport { Button } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    shadow: {\n      \"&:hover\": {\n        boxShadow: \"13px 10px 10px 1px rgba(0, 0, 0, 0.24)\",\n      },\n    },\n    declineBtn: {\n        boxShadow: 'none',\n        textTransform: 'none',\n        fontSize: 16,\n        padding: '5px 35px',\n        border: '1px solid',\n        lineHeight: 1.5,\n        backgroundColor: '#e53935',\n        borderColor: '#e53935',\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:hover': {\n          backgroundColor: '#ea605d',\n          borderColor: '#ea602d',\n          boxShadow: 'none',\n        },\n        '&:active': {\n          boxShadow: 'none',\n          backgroundColor: '#a02725',\n          borderColor: '#ea605d',\n        },\n        '&:focus': {\n          boxShadow: '0 0 0 0.2rem #ea605d',\n      }\n    },\n    acceptBtn: {\n      marginRight:'10%',\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      padding: '5px 35px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#43a047',\n      borderColor: '#43a047',\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#68b36b',\n        borderColor: '#67b36b',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#2e7031',\n        borderColor: '#68b36b',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem #68b36b',\n    }\n  },\n    \n  })\n);\n","import { createStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { TextField, DialogActions, } from '@material-ui/core';\nimport { COLORS } from '../../constants/colors';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2.5),\n      width: \"100%\",\n    },\n    marginWithError: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(0),\n      width: \"100%\",\n    },\n    textCenter: {\n      textAlign: \"center\",\n    },\n    width400: {\n      maxWidth: \"400px\",\n      width: \"100%\",\n    },\n    width600:{\n      width:\"600px\",\n    },\n    noMargin: {\n      margin: \"0\",\n      textAlign: \"center\",\n    },\n    dialogActionsStyle: {\n      marginTop: \"10px\",\n      width: \"100%\",\n      justifyContent: \"center\",\n    },\n    \n  })\n);\n\n\nexport const InputWrapper = styled.div`\n    text-align: center;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const DialogActionsStyle = styled(DialogActions)`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nexport const ErrorWrapper = styled.div`\n  color: ${COLORS.red};\n  width: 100%;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  font-size: 12px;\n`;\n\nexport const DateStyle = styled(TextField)`\n  width: 194px;\n  margin: 16px;\n`;","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, {\n  AutocompleteChangeReason,\n} from \"@mui/material/Autocomplete\";\nimport { useStyles } from \".\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport { MenuItem } from \"@material-ui/core\";\nimport * as Styled from \"../../styles/styles\"\n\ninterface IEquipmentSelect {\n  equipmentOptions: IEquipment[];\n  onChangeEquipmentOptionHandler: (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IEquipment | null,\n    reason: AutocompleteChangeReason\n  ) => void;\n  defaultOptionEquipment: IEquipment | null;\n  optionValue: IEquipment | null;\n  isDirty: boolean\n  onOpenSelectorHandler:(\n    event: React.SyntheticEvent<Element, Event>,\n  ) => void;\n}\n\nexport const EquipmentSelectByRequest = ({\n  equipmentOptions,\n  defaultOptionEquipment,\n  onChangeEquipmentOptionHandler,\n  optionValue,\n  onOpenSelectorHandler,\n  isDirty\n}: IEquipmentSelect) => {\n  const classes = useStyles();\n  return (\n    <>\n    {!defaultOptionEquipment && !isDirty && <Styled.ErrorWrapper>This equipment is already being used</Styled.ErrorWrapper>}\n      <Autocomplete\n        className={classes.wrapper}\n        id=\"equipmentAutocomplete\"\n        isOptionEqualToValue={(option, value) => option.name === value.name}\n        onChange={onChangeEquipmentOptionHandler}\n        onOpen={onOpenSelectorHandler}\n        options={equipmentOptions}\n        getOptionLabel={(option) => option.name}\n        defaultValue={defaultOptionEquipment}\n        renderInput={(params) => (\n          <TextField {...params} label={\"Choose equipment\"} />\n        )}\n        renderOption={(params, option) => (\n          <MenuItem {...params} key={option.id}>\n            {option.name}\n          </MenuItem>\n        )}\n      />\n    </>\n  );\n};\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      width: \"80%\",\n      maxWidth: '500px',\n      margin: '20px 0'\n    },\n   \n  })\n);","import {\n  Dialog,\n  DialogActions,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { DialogContent } from \"@mui/material\";\nimport {  IRequest } from \"../../redux/userReducer\";\nimport { useStyles } from \".\";\nimport { CustomButton } from \"../button\";\nimport { EquipmentSelectByRequest } from \"../modal-equipment-request-select\";\nimport { useEquipmentRequest } from \"./modal-equipment-request.state\";\nimport * as Styled from \"../../styles/styles\";\nimport { Loader } from \"../loader\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\n\nexport interface IUserRequestModal {\n  isModalOpen: boolean;\n  userRequestModalOpenHadler: () => void;\n  deleteItem: Function;\n  request: IRequest;\n  defaultOptionEquipment:IEquipment | null | undefined\n  freeEquipment:IEquipment[]\n}\nexport const UserRequestModal = ({\n  deleteItem,\n  request,\n  isModalOpen,\n  userRequestModalOpenHadler,\n  defaultOptionEquipment,\n  freeEquipment\n}: IUserRequestModal) => {\n  const handleClose = () => {\n    userRequestModalOpenHadler();\n    setDirty(false);\n    if(defaultOptionEquipment){\n    return  setOptionValue(defaultOptionEquipment);\n    }\n    return setOptionValue(null);\n  };\n  const {\n    onChangeEquipmentOptionHandler,\n    optionValue,\n    setOptionValue,\n    isSending,\n    editUsers,\n    onOpenSelectorHandler,\n    isDirty,\n    setDirty\n  } = useEquipmentRequest({\n    defaultOptionEquipment: defaultOptionEquipment,\n  });\n  const classes = useStyles();\n  const handleSubmit = () => {\n    editUsers(request.user.id, handleClose);\n  \n    deleteItem(request.id);\n    \n  };\n  return (\n    <Dialog open={isModalOpen}>\n      <DialogTitle id=\"form-dialog-title\" className={classes.textCenter}>\n        Add an equipment to the emloyee\n      </DialogTitle>\n      {isSending && <Loader />}\n      <DialogContent>\n        <DialogContentText>Username: {request.user.name}</DialogContentText>\n        <DialogContentText>\n          Requested Equipment: {request.equipment.name}\n        </DialogContentText>\n      </DialogContent>\n      <Styled.InputWrapper>\n        <EquipmentSelectByRequest\n          equipmentOptions={freeEquipment}\n          onChangeEquipmentOptionHandler={onChangeEquipmentOptionHandler}\n          defaultOptionEquipment={defaultOptionEquipment || null}\n          optionValue={optionValue}\n          onOpenSelectorHandler={onOpenSelectorHandler}\n          isDirty={isDirty}\n        />\n        <DialogActions className={classes.dialogActionsStyle}>\n          <CustomButton onClick={handleClose} type=\"button\" label=\"Cancel\" />\n          <CustomButton\n            onClick={handleSubmit}\n            label={\"Edit\"}\n            type=\"submit\"\n            disabled={((optionValue !== null)) ? false : true}\n          />\n        </DialogActions>\n      </Styled.InputWrapper>\n    </Dialog>\n  );\n};\n","import { useAppSelector } from \"./../../redux/store\";\nimport { useDispatch } from \"react-redux\";\nimport { MainApiServices } from \"./../../screens/main/main.api\";\nimport React from \"react\";\nimport { AutocompleteChangeReason } from \"@mui/material/Autocomplete\";\nimport { addUserInEquipment, IEquipment } from \"../../redux/equipmentReducer\";\nimport { catchErrors, editUser } from \"../../redux/userReducer\";\n\nexport interface IEquipRequestProp {\n  defaultOptionEquipment: IEquipment | null | undefined;\n}\n\nexport const useEquipmentRequest = ({\n  defaultOptionEquipment,\n}: IEquipRequestProp) => {\n  const [optionValue, setOptionValue] = React.useState<IEquipment | null>(\n    defaultOptionEquipment || null\n  );\n  const [isSending, setSending] = React.useState(false);\n  const [isDirty, setDirty] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const { users } = useAppSelector((state) => ({\n    equipment: state.equipment.equipment,\n    users: state.users.allUsers,\n  }));\n\n  const onOpenSelectorHandler = (\n    event: React.SyntheticEvent<Element, Event>\n  ): void => {\n    return setDirty(true);\n  };\n\n  const onChangeEquipmentOptionHandler = (\n    event: React.SyntheticEvent<Element, Event>,\n    newValue: IEquipment | null,\n    reason: AutocompleteChangeReason\n  ): void => {\n    setOptionValue(newValue);\n  };\n\n  const editUsers = async (userId: string, closeModal: () => void) => {\n    try {\n      const user = users.find((user) => user.id === userId);\n      setSending(true);\n\n      if (user && optionValue !== null) {\n        const { data: editUserData } = await MainApiServices.editUser({\n          ...user,\n          equipmentIds: user.equipmentIds\n            ? [...user.equipmentIds, optionValue.id]\n            : [optionValue.id],\n          equipment: user.equipment\n            ? [...user.equipment, optionValue]\n            : [optionValue],\n        });\n        dispatch(editUser({ ...editUserData }));\n        dispatch(\n          addUserInEquipment({ equipment: [optionValue], user: editUserData })\n        );\n        closeModal();\n      }\n    } catch (e: any) {\n      catchErrors(e.response.data.message || e.message);\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return {\n    onChangeEquipmentOptionHandler,\n    optionValue,\n    setOptionValue,\n    editUsers,\n    isSending,\n    onOpenSelectorHandler,\n    isDirty,\n    setDirty,\n  };\n};\n","import React from \"react\";\nimport { IRequest } from \"../../redux/userReducer\";\nimport * as Styled from \"../../styles/styles\";\nimport { useStyles } from \"./request-item.style\";\nimport { CustomButton } from \"../button\";\nimport { RemoveItemDialog } from \"../remove-item-dialog/remove-item-dialog\";\nimport { ClickAwayListener} from \"@material-ui/core\";\nimport { useRequestItem } from \"./request-item.state\";\nimport { UserRequestModal } from \"../modal-equipment-request\";\nimport { useEditModalState } from \"../hooks/edit-modal-state\";\n\ninterface IRequestProp {\n  request: IRequest;\n}\n\nexport const RequestItem = ({ request }: IRequestProp) => {\n  const {\n    deleteRequestItem,\n    isSending,\n    defaultOptionEquipment,\n    freeEquipment,\n  } = useRequestItem({ requestedEquipment: request.equipment });\n  const {\n    handleClose,\n    removeItemHandler,\n    itemModalOpenHandler,\n    isEditModalOpen,\n    isRemoveModalOpen,\n    handleCloseRemoveModal,\n  } = useEditModalState();\n\n  const listClasses = useStyles();\n  return (\n    <Styled.ListItem className={listClasses.shadow}>\n      <Styled.FlexRowWrapper>\n        <Styled.SmallWidthWrapper>\n          <Styled.ListItemText>\n            <Styled.TitleText>User: </Styled.TitleText>\n            {request.user.name}\n          </Styled.ListItemText>\n          <Styled.ListItemText>\n            <Styled.TitleText>UserId: </Styled.TitleText>\n            {request.user.id}\n          </Styled.ListItemText>\n        </Styled.SmallWidthWrapper>\n        <Styled.SmallWidthWrapper>\n          <Styled.ListItemText>\n            <Styled.TitleText>Request: </Styled.TitleText>\n            {request.request}\n          </Styled.ListItemText>\n          <Styled.ListItemText>\n            <Styled.TitleText>Requested Equipment: </Styled.TitleText>\n            {request.equipment.name}\n          </Styled.ListItemText>\n        </Styled.SmallWidthWrapper>\n        <Styled.SmallWidthWrapper>\n          <Styled.ListItemText></Styled.ListItemText>\n          <ClickAwayListener onClickAway={handleClose}>\n            <Styled.ButtonContainer>\n              <CustomButton\n                type=\"button\"\n                className={listClasses.acceptBtn}\n                label={\"Accept\"}\n                onClick={itemModalOpenHandler}\n              />\n              <CustomButton\n                type=\"button\"\n                className={listClasses.declineBtn}\n                label={\"Decline\"}\n                onClick={removeItemHandler}\n              />\n            </Styled.ButtonContainer>\n          </ClickAwayListener>\n        </Styled.SmallWidthWrapper>\n\n        <UserRequestModal\n          deleteItem={deleteRequestItem}\n          request={request}\n          isModalOpen={isEditModalOpen}\n          userRequestModalOpenHadler={itemModalOpenHandler}\n          defaultOptionEquipment={defaultOptionEquipment}\n          freeEquipment={freeEquipment}\n        />\n        <RemoveItemDialog\n          isSending={isSending}\n          requestItemId={request.id}\n          isRemoveModalOpen={isRemoveModalOpen}\n          handleCloseRemoveModal={handleCloseRemoveModal}\n          deleteRequest={deleteRequestItem}\n        />\n      </Styled.FlexRowWrapper>\n    </Styled.ListItem>\n  );\n};\n","import { useEditModalState } from './../hooks/edit-modal-state';\nimport { useGlobalState } from \"./../global-states/global.states\";\nimport { MainApiServices } from \"./../../screens/main/main.api\";\nimport { useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { catchErrors, deleteRequest, IRequest } from \"../../redux/userReducer\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\n\nexport interface IRequestItemProp {\n  requestedEquipment: IEquipment;\n}\n\nexport const useRequestItem = ({ requestedEquipment }: IRequestItemProp) => {\n\n  const {handleCloseRemoveModal} = useEditModalState()\n\n  const [isSending, setSending] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const { equipment } = useGlobalState();\n\n  const deleteRequestItem= async (requestId: string) => {\n    try {\n      setSending(true);\n      const deletedRequest = await MainApiServices.deleteRequest(requestId);\n      dispatch(deleteRequest(requestId));\n    } catch (e: any) {\n      dispatch(catchErrors(e.response.data.message || e.message));\n    } finally {\n      setSending(false);\n      handleCloseRemoveModal();\n    }\n  };\n  const freeEquipment = equipment.filter((equip) => {\n    return equip.user === null;\n  });\n  const defaultOptionEquipment = (requestedEquipment !== null) ? freeEquipment.find( (equip)=> equip.id === requestedEquipment.id ) : null\n  \n\n  return {\n   \n    \n    \n    isSending,\n    deleteRequestItem,\n    defaultOptionEquipment,\n    freeEquipment\n  };\n};\n","import { useAppSelector } from \"../../redux/store\";\nimport * as Styled from \"../../styles/styles\";\nimport { NotificationMessage } from \"../notification-message/ notification-message\";\nimport { RequestItem } from \"../request-item/request-item\";\n\nexport const RequestList = () => {\n  const requests = useAppSelector((state) => state.users.thatUser.requests);\n\n  return (\n    <Styled.ListMainWrapper>\n      {requests.length ? (\n        requests.map((request) => (\n          <RequestItem request={request} key={request.id} />\n        ))\n      ) : (\n        <NotificationMessage name={\"request\"} />\n      )}\n    </Styled.ListMainWrapper>\n  );\n};\n","import React from \"react\";\nimport { IEquipment } from \"../../redux/equipmentReducer\";\nimport {  useAppSelector } from \"../../redux/store\";\nimport * as Styled from \"../../styles/styles\";\nimport { Filter } from \"../user-filter/index\";\nimport { EquipmentItem } from \"../equipment-item/index\";\nimport { NotificationMessage } from \"../notification-message/ notification-message\";\nimport { useSelectedEquipmentState } from \"./selected-equipment-list.state\";\n\n\n\nexport const SelectedEquipmentList = () => {\n  const equipment = useAppSelector( state => state.users.thatUser.equipment)\n  const { onChangeFilterHandler, getItemOnPage } = useSelectedEquipmentState();\n\n  const equipmentOnPage = getItemOnPage(equipment) as IEquipment[];\n  return (\n    <Styled.ListMainWrapper>\n      <Filter onChangeFilterHandler={onChangeFilterHandler} />\n      {equipment.length ? (\n        equipmentOnPage.map((equipmentItem) => {\n          return (\n            <EquipmentItem\n              key={equipmentItem.id}\n              equipmentItem={equipmentItem}\n              selectedItemGroup={true}\n            />\n          );\n        })\n      ) : (\n        <NotificationMessage name={\"selected equipment\"} />\n      )}\n    </Styled.ListMainWrapper>\n  );\n};\n","import  React  from 'react';\n\nimport { IUser } from './../../redux/userReducer';\nimport { IEquipment } from '../../redux/equipmentReducer';\n\n\nexport const useSelectedEquipmentState = () =>{\n    const [filterValues, setFilterValues] = React.useState(\"\");\n   \n      const onChangeFilterHandler = (event: { target: { value: string } }) => {\n        setFilterValues(event.target.value);\n      };\n    \n      const getItemOnPage = (items: Array<IEquipment | IUser>) =>\n    items.filter((item: { name: string }) =>\n      item.name.toLowerCase().includes(filterValues.toLocaleLowerCase())\n    );\n      return {\n          getItemOnPage,\n          onChangeFilterHandler\n      }\n\n}","import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction:column;\n  width: 100%;\n  min-height: 100vh;\n`;\n\n","import { useEffect } from \"react\";\nimport { AdminTabs } from \"../../components/admin-tabs\";\nimport { UsersList } from \"../../components/users-list\";\nimport { EquipmentList } from \"../../components/equipment-list\";\nimport { Header } from \"../../components/header\";\nimport { Loader } from \"../../components/loader\";\nimport { RequestList } from \"../../components/request-list/request-list\";\nimport { SelectedEquipmentList } from \"../../components/selected-equipment-list\";\nimport { useAppSelector } from \"../../redux/store\";\nimport { useMainState } from \"./main.state\";\nimport * as Styled from \"./mainPage.styles\";\n\nexport const MainPage = () => {\n  const userRole = useAppSelector((state) => state.users.thatUser.role);\n\n  const {\n    logOut,\n    getAllUsers,\n    getAllEquipments,\n    getAllRequests,\n    isLoading,\n  } = useMainState();\n\n  useEffect(() => {\n    if (userRole === \"Admin\") {\n      getAllUsers();\n      getAllRequests();\n    }\n    getAllEquipments();\n\n  }, []);\n  return (\n    <Styled.MainWrapper>\n      <Header onClick={logOut} />\n\n      {isLoading && <Loader />}\n      {!isLoading && userRole === \"Admin\" && (\n        <AdminTabs\n          users={<UsersList />}\n          equipment={<EquipmentList />}\n          request={<RequestList />}\n\n        />\n      )}\n      {!isLoading && userRole === \"User\" && (\n        <AdminTabs equipmentSelected={<SelectedEquipmentList />} />\n      )}\n    </Styled.MainWrapper>\n  );\n};\n","import { useAppSelector } from '../../redux/store';\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {  catchErrors, getRequest, reset, getUsers  } from \"../../redux/userReducer\";\nimport { getEquipments } from \"../../redux/equipmentReducer\";\nimport { MainApiServices } from './main.api';\n\nexport const useMainState = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setLoading] = React.useState(true);\n  const token = useAppSelector( state => state.users.token)\n\n  const getAllUsers = async () => {\n      try {\n        const usersData = await MainApiServices.getAllUsers(token);\n        dispatch(getUsers(usersData.data));\n      } catch (err:any) {\n        dispatch(catchErrors(err.message));\n      }\n  };\n\n  const deleteUser = async (id: string) => {\n    try {\n      await MainApiServices.deleteUser(id);\n      const usersData = await MainApiServices.getAllUsers();\n      dispatch(getUsers(usersData.data));\n    } catch (err:any) {\n      dispatch(catchErrors(err.response?.data));\n    }\n  };\n\n  const getAllEquipments = async () => {\n      try {\n        const equipmentData = await MainApiServices.getAllEquipments(token);\n        dispatch(getEquipments(equipmentData.data));\n      } catch (err:any) {\n        dispatch(catchErrors(err.message));\n      } finally {\n        setLoading(false)\n      }\n  };\n\n  const deleteEquipment = async (id: string) => {\n    try {\n      await MainApiServices.deleteUser(id);\n      const usersData = await MainApiServices.getAllEquipments();\n      dispatch(getEquipments(usersData.data));\n    } catch (err:any) {\n      dispatch(catchErrors(err.response.data));\n    }\n  };\n\n  const getAllRequests = async() => {\n    try{\n      const requestData = await MainApiServices.getAllRequest(token);\n      dispatch(getRequest(requestData.data))\n    }catch(err:any) {\n      dispatch(catchErrors(err.response.data.message || err.message));\n    }\n  }\n\n  const logOut = () => {\n    dispatch(reset());\n  };\n\n  return {\n    logOut,\n    getAllUsers,\n    deleteUser,\n    getAllEquipments,\n    getAllRequests,\n    deleteEquipment,\n    isLoading,\n  };\n};\n","export const ROUTES = {\n  enter: '/',\n  admin: '/main',\n  equipment: '/equipment',\n  user:'/user'\n\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from '../../constants/routes';\nimport { RootState} from '../../redux/store';\n\nconst PrivateRoute = () => {\n  const isSignedIn = useSelector((state: RootState) => state.users.isLogin);\n\n\n  return (\n    <Route\n      render={() =>\n        isSignedIn  ? (\n          <Redirect\n            to={{\n              pathname: ROUTES.admin,\n            }}\n          />\n        ) : (\n          <Redirect\n            to={{\n              pathname: ROUTES.enter,\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import styled from 'styled-components';\nimport { COLORS } from '../../constants/colors';\nimport { FONT_SIZES } from '../../constants/fontSizes';\n\nexport const AuthWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 0 15px;\n  min-height: 100%;\n  justify-content: center;\n  align-items: center;\n  `;\nexport const AuthForm = styled.form`\n  height: 400px;\n  width: 100%;\n  max-width: 400px;\n  padding: 25px;\n  border-radius: 5px;\n  box-shadow: 0 0 30px -13px rgba(34, 60, 80, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    width: 100%;\n    height: 50px;\n  }\n\n  div {\n    width: 100%;\n  }\n`;\n\n\nexport const ErrorText = styled.div`\n  font-size: ${FONT_SIZES.small};\n  text-align: left;\n  color: ${COLORS.red};\n  padding-left: 14px;\n  padding-bottom: 0px;\n  padding-top: 3px;\n  margin-bottom: 0px;\n`;\n","export const FONT_SIZES = {\n  small:\"12px\"\n}","export const PLACEHOLDERS = {\n  email: 'Enter your email',\n  password: 'Enter your password',\n  name: 'Enter your name',\n};\n","export const AUTH_ROUTES = {\n  login: 'user/login',\n};\n","import { postData } from '../../service/api';\nimport { AUTH_ROUTES } from './auth.constants';\n\nexport const authApiServices = {\n  async login(data: { email: string; password: string }) {\n    return await postData(AUTH_ROUTES.login, data);\n  },\n \n};\n","import { authApiServices } from \"./auth.api\";\nimport * as Yup from \"yup\";\nimport { ERRORS } from \"../../constants/errors\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  loginUser,\n  catchErrors,\n} from \"../../redux/userReducer\";\n\nexport const useAuthState = () => {\n  const dispatch = useDispatch();\n\n  const login = async ({\n    email,\n    password,\n  }: {\n    email: string;\n    password: string;\n  }) => {\n    const data = {\n      email,\n      password,\n    };\n\n    try {\n      const userData = await authApiServices.login(data);\n      dispatch(loginUser(userData.data));\n    } catch (err:any) {\n      \n      dispatch(catchErrors(err.response.data.message));\n    }\n  };\n  \n  \n  const authValidation = Yup.object().shape({\n    email: Yup.string()\n      .email(ERRORS.emailExample)\n      .required(ERRORS.emailRequired),\n    password: Yup.string()\n      .required(ERRORS.passwordRequired)\n      .min(8, ERRORS.passwordToShort)\n      .matches(/[a-zA-Z]/, ERRORS.passwordOnlyLatinLetters),\n  });\n\n\n\n  return {\n    login,\n    authValidation,\n  };\n};\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: theme.spacing(1.5),\n      marginBottom: theme.spacing(2.5),\n    },\n    marginWithError: {\n      marginTop: theme.spacing(1.5),\n      marginBottom: theme.spacing(0),\n    },\n    marginBottom: {\n      marginBottom: theme.spacing(2.5),\n    }\n    \n  })\n);\n","import styled from 'styled-components';\nimport { createStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\nexport const useBorderStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  borders: {\n    borderTopLeftRadius: '5px',\n    borderTopRightRadius: '5px',\n  }\n})\n);\nexport const TabsWrapper = styled.div`\n  width: 100%;\n  max-width: 400px;\n`;\n","import React, { ReactNode } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { TabsWrapper } from './auth-tabs.styles';\nimport {useBorderStyles } from './auth-tabs.styles'\nimport {  CustomTabPanel} from '../tab-panel';\nimport { useGlobalState } from '../global-states';\n\nexport const AuthTabs = ({\n  signIn,\n}: {\n  signIn: ReactNode;\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  const {a11yProps} = useGlobalState()\n  const classes = useBorderStyles();\n\n  return (\n    <TabsWrapper>\n      <AppBar position=\"static\" className={classes.borders}>\n        <Tabs centered value={value} onChange={handleChange}>\n          <Tab label=\"Sign in\" {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <CustomTabPanel value={value} index={0}>\n        {signIn}\n      </CustomTabPanel>\n     \n     \n    </TabsWrapper>\n  );\n};\n","import React from \"react\";\nimport * as Styled from \"./auth.styles\";\nimport { CustomButton } from \"../../components/button\";\nimport { Input } from \"../../components/input\";\nimport { Formik } from \"formik\";\nimport { PLACEHOLDERS } from \"../../constants/placeholders\";\nimport { useAuthState, useStyles } from \"./auth.state\";\nimport { AuthTabs } from \"../../components/auth-tabs/auth-tabs\";\nimport { getErrorsState } from \"./auth.utils\";\n\n\n\nexport const Auth: React.FC<Element> = () => {\n  const { login, authValidation} =\n    useAuthState();\n\n  const classes = useStyles();\n\n\n\n  return (\n    \n    <Styled.AuthWrapper>\n      <AuthTabs\n        signIn={\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={login}\n            validationSchema={authValidation}\n          >\n            {(props) => {\n              const { values, touched, errors, handleChange, handleSubmit } =\n                props;\n              \n              const validate = getErrorsState(errors, touched)  \n              return (\n                <Styled.AuthForm onSubmit={handleSubmit}>\n                  <div>\n                    <Input\n                      id=\"email\"\n                      placeholder={PLACEHOLDERS.email}\n                      value={values.email}\n                      onChange={handleChange}\n                      className={\n                        validate('email')\n                          ? classes.marginWithError\n                          : classes.margin\n                      }\n                    />\n                    {validate('email') && (\n                      <Styled.ErrorText>{errors.email}</Styled.ErrorText>\n                    )}\n\n                    <Input\n                      id=\"password\"\n                      placeholder={PLACEHOLDERS.password}\n                      value={values.password}\n                      onChange={handleChange}\n                      className={\n                        validate('password')\n                          ? classes.marginWithError\n                          : classes.margin\n                      }\n                      type=\"password\"\n                    />\n                    {validate('password') && (\n                      <Styled.ErrorText>{errors.password}</Styled.ErrorText>\n                    )}\n                  </div>\n                  <CustomButton\n                    type=\"submit\"\n                    className={classes.margin}\n                    label=\"Login\"\n                  />\n                </Styled.AuthForm>\n              );\n            }}\n          </Formik>\n        }\n \n       \n       \n      ></AuthTabs>\n    </Styled.AuthWrapper>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closePopup } from \"../../redux/userReducer\";\nimport { closePopupEquipment } from \"../../redux/equipmentReducer\";\nimport { RootState, useAppSelector } from \"../../redux/store\";\n\nexport const PopUp = () => {\n  const dispatch = useDispatch();\n  let isErorrCatched:boolean | undefined;\n  let catchedErrorMessage:string | undefined;\n  const { isError, isCreated, error } = useSelector(\n    (state: RootState) => state.users\n  );\n\n  const isErorrEquip = useAppSelector((state) => state.equipment.isError);\n  const erorrMessageEquip = useAppSelector(\n    (state) => state.equipment.errorMessage\n  );\n  const closeSnackBar = () => {\n    dispatch(closePopup());\n    dispatch(closePopupEquipment())\n  };\n  isErorrCatched = isError || isErorrEquip;\n  catchedErrorMessage = error.message || erorrMessageEquip.message \n\n \n  return (\n    <>\n      <Snackbar\n        autoHideDuration={1500}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={isErorrCatched || isCreated}\n        onClose={closeSnackBar}\n      >\n        <Alert\n          severity={\n            (isErorrCatched ) ? \"error\" : \"success\"\n          }\n        >\n          { (isErorrCatched )  ? (catchedErrorMessage) : \"Successfully created!\"}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n","import './App.css';\nimport { BrowserRouter as Router, HashRouter, Route } from 'react-router-dom';\nimport { MainPage } from './screens/main';\nimport PrivateRoute from './components/PrivateRouter/privateRouter';\nimport { Auth } from './screens/auth';\nimport { ROUTES } from './constants/routes';\nimport { Provider} from 'react-redux';\nimport { persistOr, store} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { PopUp } from './components/pop-up';\n\n\nfunction App() {\n\n \n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistOr}>\n          <PopUp/>\n          <HashRouter hashType='slash'>\n            <PrivateRoute />\n            <Route path={ROUTES.admin} component={MainPage} />\n            <Route path={ROUTES.enter} exact component={Auth} />\n          </HashRouter>\n        </PersistGate>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}